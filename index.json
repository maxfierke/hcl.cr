{"repository_name":"hcl","body":"# hcl.cr\n\nA general-purpose HCL2 parser written in Crystal. Does not make any domain assumptions.\nAims to supports the standard HCL2 types and map to the HCL2 informational model.\n\nHCL2 support is considered feature complete. However, it does not yet run against\nthe spec test suite, so there may be situations in which some documents do not\nwork as they should. Please report any issues [here](https://github.com/maxfierke/hcl.cr/issues/new).\n\n## Aims\n\n`hcl.cr` has the following goals, in order of importance:\n\n1. Correctly implement the HCL2 spec\n2. Be compatible with [the Go implementation](https://github.com/Hashicorp/hcl/tree/hcl2)\n3. Easy to work with\n4. Reasonably performant and efficient\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     hcl:\n       github: maxfierke/hcl.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n### Schema-based parsing\n\nFor most use-cases, schema-based parsing will be the easiest to work with.\n`hcl.cr` provides an `HCL::Serializable` module, which can be used much like\n`JSON::Serializable` and `YAML::Serializable` from the Crystal standard library.\n\nThe module allows you to define mappings for attributes, blocks, and labels on\nyour own classes and structs, and provides convienent `self.from_hcl` and `to_hcl`\nmethods.\n\nSee documentation on [`HCL::Serializable`](src/hcl/serializable.cr) for more information.\n\n### Using the AST directly\n\nFor more advanced use cases, you can use the `HCL::Parser` class and work\nwith the AST nodes directly. `HCL::Builder` can also be used to build HCL ASTs\nusing a DSL, and create arbitrary HCL documents.\n\n```crystal\nrequire \"hcl\"\n\nSRC_TEXT = <<-HEREDOC\n# An AMI\nvariable \"ami\" {\n  description = \"the AMI to use\"\n}\n\n/* A multi\n  line comment. */\nresource \"aws_instance\" \"web\" {\n  ami               = \"${var.ami}\"\n  count             = 2\n  source_dest_check = false\n  another_boolean = \"true\"\n  something_i_want_default = null\n\n  connection {\n    user = \"root\"\n  }\n}\nHEREDOC\n\nparser = HCL::Parser.new(SRC_TEXT) # Parser object.\n\ndocument = parser.parse! # Returns an HCL::AST::Document\nvalue = document.evaluate   # Returns the HCL structure as Crystal data types\nstring = document.to_s # Returns string reconstruction of HCL configuration\n```\n\n## TODO\n\n- [X] Add support for literals (numbers, strings, booleans, null)\n- [X] Add support for blocks\n- [X] Add support for identifer parsing\n- [X] Add support for lists\n- [X] Add support for maps/objects\n- [X] Add support for function parsing, including varadic arguments\n- [X] Add support for square-bracket attribute & index access on maps & lists\n- [X] Add support for arithmetic and logic operators\n- [X] Add support for conditional expressions\n- [X] Add support for top-level attributes\n- [X] Add support for identifier/variable evaluation\n- [X] Add support for function evaluation\n- [X] Add support for heredocs\n- [X] Add standard functions\n- [X] Add support for partial- and full-schema decoding and encoding of HCL documents\n- [X] Add support for splats\n- [X] Add support for parsing interpolations/templates\n- [X] Add support for evaluating interpolations/templates\n- [X] Add support for `for` expressions\n- [X] Add support for template directives\n- [ ] Spec compliance\n- [ ] Run against HCL2 test suite\n- [ ] More validations, better parse/eval errors\n\n## Contributing\n\n1. Fork it (<https://github.com/maxfierke/hcl.cr/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## License\n\nLicensed under The MIT License. See [LICENSE](LICENSE) for more information.\n\n## Contributors\n\n- [Max Fierke](https://github.com/maxfierke) - creator and maintainer\n","program":{"html_id":"hcl/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"hcl","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"SRC_TEXT","name":"SRC_TEXT","value":"\"document_attr = \\\"i am here at the top\\\"\\n\\n# An AMI\\nvariable \\\"ami\\\" {\\n  description = \\\"the AMI to use\\\"\\n}\\n\\n/* A multi\\n  line comment. */\\nresource \\\"aws_instance\\\" \\\"web\\\" {\\n  ami               = \\\"${var.ami}\\\"\\n  count             = 2\\n  source_dest_check = false\\n  another_boolean = \\\"true\\\"\\n  something_i_want_default = null\\n\\n  connection {\\n    user = \\\"root\\\"\\n    port = 100 + 2\\n  }\\n}\\n\\n# One-line block\\ndata \\\"a_single_datum\\\" { foo = \\\"bar\\\" }\\n\\n# escaping strings\\nvariable \\\"token\\\" {\\n  my_secure_password = \\\"something \\\\\\\"with a quote\\\"\\n}\\n\\n\\n# heredocs\\nvariable \\\"prose\\\" {\\n  value = <<-PROSE\\n    there once\\n    was a story\\n  PROSE\\n\\n  nested = {\\n    heredoc = <<-NESTED\\n      i am nested\\n      and a heredoc\\n    NESTED\\n  }\\n}\\n\\nvariable \\\"list_of_things\\\" {\\n  value = [for v in [\\\"a\\\", \\\"b\\\"]: v]\\n}\\n\\nblock {\\n  cond = \\\"%{ if true ~} hello %{~ endif }\\\"\\n  for_expr = \\\"%{ for i, v in [true, 1, \\\"hello\\\"] }${i}: ${v}\\\\n%{ endfor }\\\"\\n}\\n\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"hcl/Array","path":"Array.html","kind":"class","full_name":"Array(T)","name":"Array","abstract":false,"superclass":{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"hcl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"hcl/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"hcl/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"hcl/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/any.cr","line_number":316,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L316"},{"filename":"src/hcl/to_hcl.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L1"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"hcl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"hcl/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"An `Array` is an ordered, integer-indexed collection of objects of type T.\n\nArray indexing starts at 0. A negative index is assumed to be\nrelative to the end of the array: -1 indicates the last element,\n-2 is the next to last element, and so on.\n\nAn `Array` can be created using the usual `new` method (several are provided), or with an array literal:\n\n```\nArray(Int32).new  # => []\n[1, 2, 3]         # Array(Int32)\n[1, \"hello\", 'x'] # Array(Int32 | String | Char)\n```\n\nAn `Array` can have mixed types, meaning T will be a union of types, but these are determined\nwhen the array is created, either by specifying T or by using an array literal. In the latter\ncase, T will be set to the union of the array literal elements' types.\n\nWhen creating an empty array you must always specify T:\n\n```\n[] of Int32 # same as Array(Int32)\n[]          # syntax error\n```\n\nAn `Array` is implemented using an internal buffer of some capacity\nand is reallocated when elements are pushed to it when more capacity\nis needed. This is normally known as a [dynamic array](http://en.wikipedia.org/wiki/Dynamic_array).\n\nYou can use a special array literal syntax with other types too, as long as they define an argless\n`new` method and a `<<` method. `Set` is one such type:\n\n```\nset = Set{1, 2, 3} # => Set{1, 2, 3}\nset.class          # => Set(Int32)\n```\n\nThe above is the same as this:\n\n```\nset = Set(typeof(1, 2, 3)).new\nset << 1\nset << 2\nset << 3\n```","summary":"<p>An <code><a href=\"Array.html\">Array</a></code> is an ordered, integer-indexed collection of objects of type T.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"==(other:HCL::Any)-instance-method","html_id":"==(other:HCL::Any)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"HCL::Any"}],"args_string":"(other : HCL::Any)","args_html":"(other : <a href=\"HCL/Any.html\">HCL::Any</a>)","location":{"filename":"src/hcl/any.cr","line_number":317,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L317"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"HCL::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == other.raw"}},{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/to_hcl.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L2"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builder.list do |l|\n  each do |val|\n    l << (val.to_hcl(builder))\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"hcl/Bool","path":"Bool.html","kind":"struct","full_name":"Bool","name":"Bool","abstract":false,"superclass":{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/to_hcl.cr","line_number":11,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L11"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Bool has only two possible values: `true` and `false`. They are constructed using these literals:\n\n```\ntrue  # A Bool that is true\nfalse # A Bool that is false\n```","summary":"<p>Bool has only two possible values: <code>true</code> and <code>false</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/to_hcl.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L12"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builder.literal(self.to_s)"}}],"macros":[],"types":[]},{"html_id":"hcl/Hash","path":"Hash.html","kind":"class","full_name":"Hash(K, V)","name":"Hash","abstract":false,"superclass":{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"hcl/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"hcl/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/any.cr","line_number":322,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L322"},{"filename":"src/hcl/to_hcl.cr","line_number":17,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L17"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"hcl/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"hcl/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `Hash` represents a collection of key-value mappings, similar to a dictionary.\n\nMain operations are storing a key-value mapping (`#[]=`) and\nquerying the value associated to a key (`#[]`). Key-value mappings can also be\ndeleted (`#delete`).\nKeys are unique within a hash. When adding a key-value mapping with a key that\nis already in use, the old value will be forgotten.\n\n```\n# Create a new Hash for mapping String to Int32\nhash = Hash(String, Int32).new\nhash[\"one\"] = 1\nhash[\"two\"] = 2\nhash[\"one\"] # => 1\n```\n\n[Hash literals](https://crystal-lang.org/reference/syntax_and_semantics/literals/hash.html)\ncan also be used to create a `Hash`:\n\n```\n{\"one\" => 1, \"two\" => 2}\n```\n\nImplementation is based on an open hash table.\nTwo objects refer to the same hash key when their hash value (`Object#hash`)\nis identical and both objects are equal to each other (`Object#==`).\n\nEnumeration follows the order that the corresponding keys were inserted.\n\nNOTE: When using mutable data types as keys, changing the value of a key after\nit was inserted into the `Hash` may lead to undefined behaviour. This can be\nrestored by re-indexing the hash with `#rehash`.","summary":"<p>A <code><a href=\"Hash.html\">Hash</a></code> represents a collection of key-value mappings, similar to a dictionary.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"==(other:HCL::Any)-instance-method","html_id":"==(other:HCL::Any)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"HCL::Any"}],"args_string":"(other : HCL::Any)","args_html":"(other : <a href=\"HCL/Any.html\">HCL::Any</a>)","location":{"filename":"src/hcl/any.cr","line_number":323,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L323"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"HCL::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == other.raw"}},{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/to_hcl.cr","line_number":18,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L18"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builder.map do |m|\n  each do |key, value|\n    m.attribute(key) do\n      value.to_hcl(m)\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL","path":"HCL.html","kind":"module","full_name":"HCL","name":"HCL","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl.cr","line_number":14,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl.cr#L14"},{"filename":"src/hcl/any.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L1"},{"filename":"src/hcl/ast.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast.cr#L1"},{"filename":"src/hcl/ast/block.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/block.cr#L1"},{"filename":"src/hcl/ast/body.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/body.cr#L1"},{"filename":"src/hcl/ast/call_expr.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/call_expr.cr#L1"},{"filename":"src/hcl/ast/cond_expr.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/cond_expr.cr#L1"},{"filename":"src/hcl/ast/document.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/document.cr#L1"},{"filename":"src/hcl/ast/expression.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/expression.cr#L1"},{"filename":"src/hcl/ast/for_expr.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L1"},{"filename":"src/hcl/ast/get_attr_expr.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/get_attr_expr.cr#L1"},{"filename":"src/hcl/ast/heredoc.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/heredoc.cr#L1"},{"filename":"src/hcl/ast/identifier.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/identifier.cr#L1"},{"filename":"src/hcl/ast/index_expr.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/index_expr.cr#L1"},{"filename":"src/hcl/ast/list.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/list.cr#L1"},{"filename":"src/hcl/ast/literal.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/literal.cr#L1"},{"filename":"src/hcl/ast/map.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/map.cr#L1"},{"filename":"src/hcl/ast/node.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/node.cr#L1"},{"filename":"src/hcl/ast/number.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/number.cr#L1"},{"filename":"src/hcl/ast/op_expr.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/op_expr.cr#L1"},{"filename":"src/hcl/ast/splat_expr.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/splat_expr.cr#L1"},{"filename":"src/hcl/ast/template.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template.cr#L1"},{"filename":"src/hcl/ast/template_for_expr.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_for_expr.cr#L1"},{"filename":"src/hcl/ast/template_if.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_if.cr#L1"},{"filename":"src/hcl/ast/template_interpolation.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_interpolation.cr#L1"},{"filename":"src/hcl/builder.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L1"},{"filename":"src/hcl/exceptions.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/exceptions.cr#L1"},{"filename":"src/hcl/expression_context.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/expression_context.cr#L1"},{"filename":"src/hcl/function.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L1"},{"filename":"src/hcl/functions/abs.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/abs.cr#L1"},{"filename":"src/hcl/functions/coalesce.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/coalesce.cr#L1"},{"filename":"src/hcl/functions/compact.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/compact.cr#L1"},{"filename":"src/hcl/functions/concat.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/concat.cr#L1"},{"filename":"src/hcl/functions/format.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/format.cr#L1"},{"filename":"src/hcl/functions/has_index.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/has_index.cr#L1"},{"filename":"src/hcl/functions/int.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/int.cr#L1"},{"filename":"src/hcl/functions/json_decode.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/json_decode.cr#L1"},{"filename":"src/hcl/functions/json_encode.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/json_encode.cr#L1"},{"filename":"src/hcl/functions/length.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/length.cr#L1"},{"filename":"src/hcl/functions/lower.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/lower.cr#L1"},{"filename":"src/hcl/functions/max.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/max.cr#L1"},{"filename":"src/hcl/functions/min.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/min.cr#L1"},{"filename":"src/hcl/functions/set_has.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_has.cr#L1"},{"filename":"src/hcl/functions/set_intersection.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_intersection.cr#L1"},{"filename":"src/hcl/functions/set_subtract.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_subtract.cr#L1"},{"filename":"src/hcl/functions/set_sym_diff.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_sym_diff.cr#L1"},{"filename":"src/hcl/functions/set_union.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_union.cr#L1"},{"filename":"src/hcl/functions/strlen.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/strlen.cr#L1"},{"filename":"src/hcl/functions/substr.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/substr.cr#L1"},{"filename":"src/hcl/functions/upper.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/upper.cr#L1"},{"filename":"src/hcl/grammar.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/grammar.cr#L1"},{"filename":"src/hcl/parser.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/parser.cr#L1"},{"filename":"src/hcl/serializable.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L1"},{"filename":"src/hcl/visitor.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitor.cr#L1"},{"filename":"src/hcl/visitors/evaluator.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L1"},{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L1"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"build(io:IO,&)-class-method","html_id":"build(io:IO,&)-class-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO, &)","args_html":"(io : IO, &)","location":{"filename":"src/hcl.cr","line_number":17,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl.cr#L17"},"def":{"name":"build","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"HCL::Builder.build do |builder|\n  yield builder\nend.to_s(io)"}},{"id":"build(&)-class-method","html_id":"build(&)-class-method","name":"build","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/hcl.cr","line_number":23,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl.cr#L23"},"def":{"name":"build","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |str|\n  build(str) do |builder|\n    yield builder\n  end\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"hcl/HCL/Any","path":"HCL/Any.html","kind":"struct","full_name":"HCL::Any","name":"Any","abstract":false,"superclass":{"html_id":"hcl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"hcl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/any.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L2"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(hsh:Hash(String,RawType))-class-method","html_id":"new(hsh:Hash(String,RawType))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"hsh","doc":null,"default_value":"","external_name":"hsh","restriction":"Hash(String, RawType)"}],"args_string":"(hsh : Hash(String, RawType))","args_html":"(hsh : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../HCL/Any/RawType.html\">RawType</a>))","location":{"filename":"src/hcl/any.cr","line_number":22,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L22"},"def":{"name":"new","args":[{"name":"hsh","doc":null,"default_value":"","external_name":"hsh","restriction":"Hash(String, RawType)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(hsh)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(array:Array(RawType))-class-method","html_id":"new(array:Array(RawType))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(RawType)"}],"args_string":"(array : Array(RawType))","args_html":"(array : <a href=\"../Array.html\">Array</a>(<a href=\"../HCL/Any/RawType.html\">RawType</a>))","location":{"filename":"src/hcl/any.cr","line_number":26,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L26"},"def":{"name":"new","args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array(RawType)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(array)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(pull:JSON::PullParser)-class-method","html_id":"new(pull:JSON::PullParser)-class-method","name":"new","doc":"Reads a `HCL::Any` value from the given pull parser.\n\nBased on https://github.com/crystal-lang/crystal/blob/6952aacb37682558d1a976b4ebf1b1456d9f8b84/src/json/any.cr#L23","summary":"<p>Reads a <code><a href=\"../HCL/Any.html\">HCL::Any</a></code> value from the given pull parser.</p>","abstract":false,"args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/hcl/any.cr","line_number":220,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L220"},"def":{"name":"new","args":[{"name":"pull","doc":null,"default_value":"","external_name":"pull","restriction":"JSON::PullParser"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case pull.kind\nwhen .null?\n  new(pull.read_null)\nwhen .bool?\n  new(pull.read_bool)\nwhen .int?\n  new(pull.read_int)\nwhen .float?\n  new(pull.read_float)\nwhen .string?\n  new(pull.read_string)\nwhen .begin_array?\n  ary = [] of HCL::Any\n  pull.read_array do\n    ary << (new(pull))\n  end\n  new(ary)\nwhen .begin_object?\n  hash = {} of String => HCL::Any\n  pull.read_object do |key|\n    hash[key] = new(pull)\n  end\n  new(hash)\nelse\n  raise(\"Unknown pull kind: #{pull.kind}\")\nend"}},{"id":"new(raw)-class-method","html_id":"new(raw)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":""}],"args_string":"(raw)","args_html":"(raw)","location":{"filename":"src/hcl/any.cr","line_number":30,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L30"},"def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(raw)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other)-instance-method","html_id":"==(other)-instance-method","name":"==","doc":"Returns `true` if the raw object is equal to *other*.","summary":"<p>Returns <code>true</code> if the raw object is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","args_html":"(other)","location":{"filename":"src/hcl/any.cr","line_number":279,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L279"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw == other"}},{"id":"==(other:Any)-instance-method","html_id":"==(other:Any)-instance-method","name":"==","doc":"Returns `true` if both `self` and *other*'s raw object are equal.","summary":"<p>Returns <code>true</code> if both <code>self</code> and <em>other</em>'s raw object are equal.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Any"}],"args_string":"(other : Any)","args_html":"(other : <a href=\"../HCL/Any.html\">Any</a>)","location":{"filename":"src/hcl/any.cr","line_number":274,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L274"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw == other.raw"}},{"id":"[](index:Int):HCL::Any-instance-method","html_id":"[](index:Int):HCL::Any-instance-method","name":"[]","doc":"Assumes the underlying value is an `Array` and returns the element\nat the given index.\nRaises if the underlying value is not an `Array`.","summary":"<p>Assumes the underlying value is an <code><a href=\"../Array.html\">Array</a></code> and returns the element at the given index.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : HCL::Any","args_html":"(index : Int) : <a href=\"../HCL/Any.html\">HCL::Any</a>","location":{"filename":"src/hcl/any.cr","line_number":63,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L63"},"def":{"name":"[]","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HCL::Any","visibility":"Public","body":"case object = @raw\nwhen Array\n  object[index]\nelse\n  raise(\"Expected Array for #[](index : Int), not #{object.class}\")\nend"}},{"id":"[](key:String):HCL::Any-instance-method","html_id":"[](key:String):HCL::Any-instance-method","name":"[]","doc":"Assumes the underlying value is a `Hash` and returns the element\nwith the given key.\nRaises if the underlying value is not a `Hash`.","summary":"<p>Assumes the underlying value is a <code><a href=\"../Hash.html\">Hash</a></code> and returns the element with the given key.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : HCL::Any","args_html":"(key : <a href=\"../String.html\">String</a>) : <a href=\"../HCL/Any.html\">HCL::Any</a>","location":{"filename":"src/hcl/any.cr","line_number":87,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L87"},"def":{"name":"[]","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HCL::Any","visibility":"Public","body":"case object = @raw\nwhen Hash\n  object[key]\nelse\n  raise(\"Expected Hash for #[](key : String), not #{object.class}\")\nend"}},{"id":"[]?(index:Int):HCL::Any?-instance-method","html_id":"[]?(index:Int):HCL::Any?-instance-method","name":"[]?","doc":"Assumes the underlying value is an `Array` and returns the element\nat the given index, or `nil` if out of bounds.\nRaises if the underlying value is not an `Array`.","summary":"<p>Assumes the underlying value is an <code><a href=\"../Array.html\">Array</a></code> and returns the element at the given index, or <code>nil</code> if out of bounds.</p>","abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"args_string":"(index : Int) : HCL::Any?","args_html":"(index : Int) : <a href=\"../HCL/Any.html\">HCL::Any</a>?","location":{"filename":"src/hcl/any.cr","line_number":75,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L75"},"def":{"name":"[]?","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HCL::Any | ::Nil","visibility":"Public","body":"case object = @raw\nwhen Array\n  object[index]?\nelse\n  raise(\"Expected Array for #[]?(index : Int), not #{object.class}\")\nend"}},{"id":"[]?(key:String):HCL::Any?-instance-method","html_id":"[]?(key:String):HCL::Any?-instance-method","name":"[]?","doc":"Assumes the underlying value is a `Hash` and returns the element\nwith the given key, or `nil` if the key is not present.\nRaises if the underlying value is not a `Hash`.","summary":"<p>Assumes the underlying value is a <code><a href=\"../Hash.html\">Hash</a></code> and returns the element with the given key, or <code>nil</code> if the key is not present.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String) : HCL::Any?","args_html":"(key : <a href=\"../String.html\">String</a>) : <a href=\"../HCL/Any.html\">HCL::Any</a>?","location":{"filename":"src/hcl/any.cr","line_number":99,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L99"},"def":{"name":"[]?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"HCL::Any | ::Nil","visibility":"Public","body":"case object = @raw\nwhen Hash\n  object[key]?\nelse\n  raise(\"Expected Hash for #[]?(key : String), not #{object.class}\")\nend"}},{"id":"as_a:Array(Any)-instance-method","html_id":"as_a:Array(Any)-instance-method","name":"as_a","doc":"Checks that the underlying value is `Array`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../Array.html\">Array</a></code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Array(Any)","args_html":" : <a href=\"../Array.html\">Array</a>(<a href=\"../HCL/Any.html\">Any</a>)","location":{"filename":"src/hcl/any.cr","line_number":195,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L195"},"def":{"name":"as_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Any)","visibility":"Public","body":"@raw.as(Array)"}},{"id":"as_a?:Array(Any)?-instance-method","html_id":"as_a?:Array(Any)?-instance-method","name":"as_a?","doc":"Checks that the underlying value is `Array`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../Array.html\">Array</a></code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Array(Any)?","args_html":" : <a href=\"../Array.html\">Array</a>(<a href=\"../HCL/Any.html\">Any</a>)?","location":{"filename":"src/hcl/any.cr","line_number":201,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L201"},"def":{"name":"as_a?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Any) | ::Nil","visibility":"Public","body":"if @raw.is_a?(Array)\n  as_a\nend"}},{"id":"as_bool:Bool-instance-method","html_id":"as_bool:Bool-instance-method","name":"as_bool","doc":"Checks that the underlying value is `Bool`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../Bool.html\">Bool</a></code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/hcl/any.cr","line_number":147,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L147"},"def":{"name":"as_bool","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@raw.as(Bool)"}},{"id":"as_bool?:Bool?-instance-method","html_id":"as_bool?:Bool?-instance-method","name":"as_bool?","doc":"Checks that the underlying value is `Bool`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../Bool.html\">Bool</a></code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Bool?","args_html":" : <a href=\"../Bool.html\">Bool</a>?","location":{"filename":"src/hcl/any.cr","line_number":153,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L153"},"def":{"name":"as_bool?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool | ::Nil","visibility":"Public","body":"if @raw.is_a?(Bool)\n  as_bool\nend"}},{"id":"as_f:Float64-instance-method","html_id":"as_f:Float64-instance-method","name":"as_f","doc":"Checks that the underlying value is `Float`, and returns its value as an `Float64`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Float</code>, and returns its value as an <code>Float64</code>.</p>","abstract":false,"args":[],"args_string":" : Float64","args_html":" : Float64","location":{"filename":"src/hcl/any.cr","line_number":171,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L171"},"def":{"name":"as_f","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@raw.as(Float64)"}},{"id":"as_f?:Float64?-instance-method","html_id":"as_f?:Float64?-instance-method","name":"as_f?","doc":"Checks that the underlying value is `Float`, and returns its value as an `Float64`.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Float</code>, and returns its value as an <code>Float64</code>.</p>","abstract":false,"args":[],"args_string":" : Float64?","args_html":" : Float64?","location":{"filename":"src/hcl/any.cr","line_number":177,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L177"},"def":{"name":"as_f?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64 | ::Nil","visibility":"Public","body":"@raw.as?(Float64)"}},{"id":"as_h:Hash(String,Any)-instance-method","html_id":"as_h:Hash(String,Any)-instance-method","name":"as_h","doc":"Checks that the underlying value is `Hash`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../Hash.html\">Hash</a></code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Any)","args_html":" : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../HCL/Any.html\">Any</a>)","location":{"filename":"src/hcl/any.cr","line_number":207,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L207"},"def":{"name":"as_h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Any)","visibility":"Public","body":"@raw.as(Hash)"}},{"id":"as_h?:Hash(String,Any)?-instance-method","html_id":"as_h?:Hash(String,Any)?-instance-method","name":"as_h?","doc":"Checks that the underlying value is `Hash`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../Hash.html\">Hash</a></code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : Hash(String, Any)?","args_html":" : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../HCL/Any.html\">Any</a>)?","location":{"filename":"src/hcl/any.cr","line_number":213,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L213"},"def":{"name":"as_h?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(String, Any) | ::Nil","visibility":"Public","body":"if @raw.is_a?(Hash)\n  as_h\nend"}},{"id":"as_i:Int64-instance-method","html_id":"as_i:Int64-instance-method","name":"as_i","doc":"Checks that the underlying value is `Int`, and returns its value as an `Int64`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code>Int</code>, and returns its value as an <code>Int64</code>.</p>","abstract":false,"args":[],"args_string":" : Int64","args_html":" : Int64","location":{"filename":"src/hcl/any.cr","line_number":159,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L159"},"def":{"name":"as_i","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"(@raw.as(Int)).to_i64"}},{"id":"as_i?:Int64?-instance-method","html_id":"as_i?:Int64?-instance-method","name":"as_i?","doc":"Checks that the underlying value is `Int`, and returns its value as an `Int64`.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code>Int</code>, and returns its value as an <code>Int64</code>.</p>","abstract":false,"args":[],"args_string":" : Int64?","args_html":" : Int64?","location":{"filename":"src/hcl/any.cr","line_number":165,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L165"},"def":{"name":"as_i?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64 | ::Nil","visibility":"Public","body":"if @raw.is_a?(Int64)\n  as_i\nend"}},{"id":"as_nil:Nil-instance-method","html_id":"as_nil:Nil-instance-method","name":"as_nil","doc":"Checks that the underlying value is `Nil`, and returns `nil`.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../Nil.html\">Nil</a></code>, and returns <code>nil</code>.</p>","abstract":false,"args":[],"args_string":" : Nil","args_html":" : <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/hcl/any.cr","line_number":141,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L141"},"def":{"name":"as_nil","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"@raw.as(Nil)"}},{"id":"as_s:String-instance-method","html_id":"as_s:String-instance-method","name":"as_s","doc":"Checks that the underlying value is `String`, and returns its value.\nRaises otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../String.html\">String</a></code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/hcl/any.cr","line_number":183,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L183"},"def":{"name":"as_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@raw.as(String)"}},{"id":"as_s?:String?-instance-method","html_id":"as_s?:String?-instance-method","name":"as_s?","doc":"Checks that the underlying value is `String`, and returns its value.\nReturns `nil` otherwise.","summary":"<p>Checks that the underlying value is <code><a href=\"../String.html\">String</a></code>, and returns its value.</p>","abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../String.html\">String</a>?","location":{"filename":"src/hcl/any.cr","line_number":189,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L189"},"def":{"name":"as_s?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"if @raw.is_a?(String)\n  as_s\nend"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":"Returns a new HCL::Any instance with the `raw` value `clone`ed.","summary":"<p>Returns a new HCL::Any instance with the <code><a href=\"../HCL/Any.html#raw:Array(HCL::Any)%7CBool%7CFloat64%7CHash(String,HCL::Any)%7CInt64%7CString%7CNil-instance-method\">#raw</a></code> value <code><a href=\"../HCL/Any.html#clone-instance-method\">#clone</a></code>ed.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/any.cr","line_number":292,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L292"},"def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Any.new(raw.clone)"}},{"id":"dig(key:String|Int,*subkeys)-instance-method","html_id":"dig(key:String|Int,*subkeys)-instance-method","name":"dig","doc":"Traverses the depth of a structure and returns the value, otherwise raises.","summary":"<p>Traverses the depth of a structure and returns the value, otherwise raises.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Int"},{"name":"subkeys","doc":null,"default_value":"","external_name":"subkeys","restriction":""}],"args_string":"(key : String | Int, *subkeys)","args_html":"(key : <a href=\"../String.html\">String</a> | Int, *subkeys)","location":{"filename":"src/hcl/any.cr","line_number":127,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L127"},"def":{"name":"dig","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Int"},{"name":"subkeys","doc":null,"default_value":"","external_name":"subkeys","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = self[key]) && (value.responds_to?(:dig))\n  return value.dig(*subkeys)\nend\nraise(\"HCL::Any value not diggable for key: #{key.inspect}\")\n"}},{"id":"dig?(key:String|Int,*subkeys)-instance-method","html_id":"dig?(key:String|Int,*subkeys)-instance-method","name":"dig?","doc":"Traverses the depth of a structure and returns the value.\nReturns `nil` if not found.","summary":"<p>Traverses the depth of a structure and returns the value.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Int"},{"name":"subkeys","doc":null,"default_value":"","external_name":"subkeys","restriction":""}],"args_string":"(key : String | Int, *subkeys)","args_html":"(key : <a href=\"../String.html\">String</a> | Int, *subkeys)","location":{"filename":"src/hcl/any.cr","line_number":110,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L110"},"def":{"name":"dig?","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Int"},{"name":"subkeys","doc":null,"default_value":"","external_name":"subkeys","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value = self[key]?\n  value.dig?(*subkeys)\nend"}},{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":"Returns a new HCL::Any instance with the `raw` value `dup`ed.","summary":"<p>Returns a new HCL::Any instance with the <code><a href=\"../HCL/Any.html#raw:Array(HCL::Any)%7CBool%7CFloat64%7CHash(String,HCL::Any)%7CInt64%7CString%7CNil-instance-method\">#raw</a></code> value <code><a href=\"../HCL/Any.html#dup-instance-method\">#dup</a></code>ed.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/any.cr","line_number":287,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L287"},"def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Any.new(raw.dup)"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","args_html":"(hasher)","location":{"filename":"src/hcl/any.cr","line_number":284,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L284"},"def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = raw.hash(hasher)\nhasher\n"}},{"id":"raw:Array(HCL::Any)|Bool|Float64|Hash(String,HCL::Any)|Int64|String|Nil-instance-method","html_id":"raw:Array(HCL::Any)|Bool|Float64|Hash(String,HCL::Any)|Int64|String|Nil-instance-method","name":"raw","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(HCL::Any) | Bool | Float64 | Hash(String, HCL::Any) | Int64 | String | Nil","args_html":" : <a href=\"../Array.html\">Array</a>(<a href=\"../HCL/Any.html\">HCL::Any</a>) | <a href=\"../Bool.html\">Bool</a> | Float64 | <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../HCL/Any.html\">HCL::Any</a>) | Int64 | <a href=\"../String.html\">String</a> | <a href=\"../Nil.html\">Nil</a>","location":{"filename":"src/hcl/any.cr","line_number":20,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L20"},"def":{"name":"raw","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw"}},{"id":"size:Int-instance-method","html_id":"size:Int-instance-method","name":"size","doc":"Assumes the underlying value is an `Array` or `Hash` and returns its size.\nRaises if the underlying value is not an `Array` or `Hash`.","summary":"<p>Assumes the underlying value is an <code><a href=\"../Array.html\">Array</a></code> or <code><a href=\"../Hash.html\">Hash</a></code> and returns its size.</p>","abstract":false,"args":[],"args_string":" : Int","args_html":" : Int","location":{"filename":"src/hcl/any.cr","line_number":49,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L49"},"def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int","visibility":"Public","body":"case object = @raw\nwhen Array\n  object.size\nwhen Hash\n  object.size\nelse\n  raise(\"Expected Array or Hash for #size, not #{object.class}\")\nend"}},{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"../HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/any.cr","line_number":249,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L249"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raw.to_hcl(builder)"}},{"id":"unwrap:RawType-instance-method","html_id":"unwrap:RawType-instance-method","name":"unwrap","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : RawType","args_html":" : <a href=\"../HCL/Any/RawType.html\">RawType</a>","location":{"filename":"src/hcl/any.cr","line_number":33,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L33"},"def":{"name":"unwrap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"RawType","visibility":"Public","body":"val = raw\nif val.is_a?(Array(Any))\n  val.map(&.unwrap).as(RawType)\nelse\n  if val.is_a?(Hash(String, Any))\n    val.transform_values do |val|\n      val.unwrap.as(RawType)\n    end\n  else\n    val\n  end\nend\n"}}],"macros":[],"types":[{"html_id":"hcl/HCL/Any/RawType","path":"HCL/Any/RawType.html","kind":"alias","full_name":"HCL::Any::RawType","name":"RawType","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/any.cr","line_number":10,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L10"}],"repository_name":"hcl","program":false,"enum":false,"alias":true,"aliased":"(Array(HCL::Any::RawType) | Bool | Float64 | Hash(String, HCL::Any::RawType) | Int64 | String | Nil)","aliased_html":"<a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any/RawType.html\">HCL::Any::RawType</a>) | <a href=\"../../Bool.html\">Bool</a> | Float64 | <a href=\"../../Hash.html\">Hash</a>(<a href=\"../../String.html\">String</a>, <a href=\"../../HCL/Any/RawType.html\">HCL::Any::RawType</a>) | Int64 | <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Any","kind":"struct","full_name":"HCL::Any","name":"Any"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Any/Type","path":"HCL/Any/Type.html","kind":"alias","full_name":"HCL::Any::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/any.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":true,"aliased":"(Array(HCL::Any) | Bool | Float64 | Hash(String, HCL::Any) | Int64 | String | Nil)","aliased_html":"<a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">HCL::Any</a>) | <a href=\"../../Bool.html\">Bool</a> | Float64 | <a href=\"../../Hash.html\">Hash</a>(<a href=\"../../String.html\">String</a>, <a href=\"../../HCL/Any.html\">HCL::Any</a>) | Int64 | <a href=\"../../String.html\">String</a> | <a href=\"../../Nil.html\">Nil</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Any","kind":"struct","full_name":"HCL::Any","name":"Any"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"hcl/HCL/ArityMismatchError","path":"HCL/ArityMismatchError.html","kind":"class","full_name":"HCL::ArityMismatchError","name":"ArityMismatchError","abstract":false,"superclass":{"html_id":"hcl/HCL/CallError","kind":"class","full_name":"HCL::CallError","name":"CallError"},"ancestors":[{"html_id":"hcl/HCL/CallError","kind":"class","full_name":"HCL::CallError","name":"CallError"},{"html_id":"hcl/HCL/ExpressionError","kind":"class","full_name":"HCL::ExpressionError","name":"ExpressionError"},{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/exceptions.cr","line_number":29,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/exceptions.cr#L29"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"Raised when there is a mismatch in number of arguments passed to an HCL\nfunction","summary":"<p>Raised when there is a mismatch in number of arguments passed to an HCL function</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST","path":"HCL/AST.html","kind":"module","full_name":"HCL::AST","name":"AST","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/ast.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast.cr#L2"},{"filename":"src/hcl/ast/block.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/block.cr#L2"},{"filename":"src/hcl/ast/body.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/body.cr#L2"},{"filename":"src/hcl/ast/call_expr.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/call_expr.cr#L2"},{"filename":"src/hcl/ast/cond_expr.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/cond_expr.cr#L2"},{"filename":"src/hcl/ast/document.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/document.cr#L2"},{"filename":"src/hcl/ast/expression.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/expression.cr#L2"},{"filename":"src/hcl/ast/for_expr.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L2"},{"filename":"src/hcl/ast/get_attr_expr.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/get_attr_expr.cr#L2"},{"filename":"src/hcl/ast/heredoc.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/heredoc.cr#L2"},{"filename":"src/hcl/ast/identifier.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/identifier.cr#L2"},{"filename":"src/hcl/ast/index_expr.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/index_expr.cr#L2"},{"filename":"src/hcl/ast/list.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/list.cr#L2"},{"filename":"src/hcl/ast/literal.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/literal.cr#L2"},{"filename":"src/hcl/ast/map.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/map.cr#L2"},{"filename":"src/hcl/ast/node.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/node.cr#L2"},{"filename":"src/hcl/ast/number.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/number.cr#L2"},{"filename":"src/hcl/ast/op_expr.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/op_expr.cr#L2"},{"filename":"src/hcl/ast/splat_expr.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/splat_expr.cr#L2"},{"filename":"src/hcl/ast/template.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template.cr#L2"},{"filename":"src/hcl/ast/template_for_expr.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_for_expr.cr#L2"},{"filename":"src/hcl/ast/template_if.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_if.cr#L2"},{"filename":"src/hcl/ast/template_interpolation.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_interpolation.cr#L2"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"hcl/HCL/AST/Block","path":"HCL/AST/Block.html","kind":"class","full_name":"HCL::AST::Block","name":"Block","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Body","kind":"class","full_name":"HCL::AST::Body","name":"Body"},"ancestors":[{"html_id":"hcl/HCL/AST/Body","kind":"class","full_name":"HCL::AST::Body","name":"Body"},{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/block.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/block.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(id:String,labels:Array(BlockLabel)=Array(BlockLabel).new,attributes:Hash(String,Node)=Hash(String,Node).new,blocks:Array(Block)=Array(Block).new,**kwargs)-class-method","html_id":"new(id:String,labels:Array(BlockLabel)=Array(BlockLabel).new,attributes:Hash(String,Node)=Hash(String,Node).new,blocks:Array(Block)=Array(Block).new,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"},{"name":"labels","doc":null,"default_value":"Array(BlockLabel).new","external_name":"labels","restriction":"Array(BlockLabel)"},{"name":"attributes","doc":null,"default_value":"Hash(String, Node).new","external_name":"attributes","restriction":"Hash(String, Node)"},{"name":"blocks","doc":null,"default_value":"Array(Block).new","external_name":"blocks","restriction":"Array(Block)"}],"args_string":"(id : String, labels : Array(BlockLabel) = <span class=\"t\">Array</span>(<span class=\"t\">BlockLabel</span>).<span class=\"k\">new</span>, attributes : Hash(String, Node) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">Node</span>).<span class=\"k\">new</span>, blocks : Array(Block) = <span class=\"t\">Array</span>(<span class=\"t\">Block</span>).<span class=\"k\">new</span>, **kwargs)","args_html":"(id : <a href=\"../../String.html\">String</a>, labels : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/BlockLabel.html\">BlockLabel</a>) = <span class=\"t\">Array</span>(<span class=\"t\">BlockLabel</span>).<span class=\"k\">new</span>, attributes : <a href=\"../../Hash.html\">Hash</a>(<a href=\"../../String.html\">String</a>, <a href=\"../../HCL/AST/Node.html\">Node</a>) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">Node</span>).<span class=\"k\">new</span>, blocks : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Block.html\">Block</a>) = <span class=\"t\">Array</span>(<span class=\"t\">Block</span>).<span class=\"k\">new</span>, **kwargs)","location":{"filename":"src/hcl/ast/block.cr","line_number":8,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/block.cr#L8"},"def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"},{"name":"labels","doc":null,"default_value":"Array(BlockLabel).new","external_name":"labels","restriction":"Array(BlockLabel)"},{"name":"attributes","doc":null,"default_value":"Hash(String, Node).new","external_name":"attributes","restriction":"Hash(String, Node)"},{"name":"blocks","doc":null,"default_value":"Array(Block).new","external_name":"blocks","restriction":"Array(Block)"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, labels, attributes, blocks, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"id:String-instance-method","html_id":"id:String-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/hcl/ast/block.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/block.cr#L6"},"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"labels:Array(HCL::AST::Node)-instance-method","html_id":"labels:Array(HCL::AST::Node)-instance-method","name":"labels","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(HCL::AST::Node)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>)","location":{"filename":"src/hcl/ast/block.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/block.cr#L6"},"def":{"name":"labels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@labels"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/BlockLabel","path":"HCL/AST/BlockLabel.html","kind":"alias","full_name":"HCL::AST::BlockLabel","name":"BlockLabel","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/ast.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":true,"aliased":"HCL::AST::Node+","aliased_html":"<a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/Body","path":"HCL/AST/Body.html","kind":"class","full_name":"HCL::AST::Body","name":"Body","abstract":true,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/body.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/body.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/HCL/AST/Block","kind":"class","full_name":"HCL::AST::Block","name":"Block"},{"html_id":"hcl/HCL/AST/Document","kind":"class","full_name":"HCL::AST::Document","name":"Document"}],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(attributes:Hash(String,Node)=Hash(String,Node).new,blocks:Array(Block)=Array(Block).new,**kwargs)-class-method","html_id":"new(attributes:Hash(String,Node)=Hash(String,Node).new,blocks:Array(Block)=Array(Block).new,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"Hash(String, Node).new","external_name":"attributes","restriction":"Hash(String, Node)"},{"name":"blocks","doc":null,"default_value":"Array(Block).new","external_name":"blocks","restriction":"Array(Block)"}],"args_string":"(attributes : Hash(String, Node) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">Node</span>).<span class=\"k\">new</span>, blocks : Array(Block) = <span class=\"t\">Array</span>(<span class=\"t\">Block</span>).<span class=\"k\">new</span>, **kwargs)","args_html":"(attributes : <a href=\"../../Hash.html\">Hash</a>(<a href=\"../../String.html\">String</a>, <a href=\"../../HCL/AST/Node.html\">Node</a>) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">Node</span>).<span class=\"k\">new</span>, blocks : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Block.html\">Block</a>) = <span class=\"t\">Array</span>(<span class=\"t\">Block</span>).<span class=\"k\">new</span>, **kwargs)","location":{"filename":"src/hcl/ast/body.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/body.cr#L6"},"def":{"name":"new","args":[{"name":"attributes","doc":null,"default_value":"Hash(String, Node).new","external_name":"attributes","restriction":"Hash(String, Node)"},{"name":"blocks","doc":null,"default_value":"Array(Block).new","external_name":"blocks","restriction":"Array(Block)"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(attributes, blocks, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"attributes:Hash(String,HCL::AST::Node)-instance-method","html_id":"attributes:Hash(String,HCL::AST::Node)-instance-method","name":"attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, HCL::AST::Node)","args_html":" : <a href=\"../../Hash.html\">Hash</a>(<a href=\"../../String.html\">String</a>, <a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>)","location":{"filename":"src/hcl/ast/body.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/body.cr#L4"},"def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes"}},{"id":"blocks:Array(HCL::AST::Block)-instance-method","html_id":"blocks:Array(HCL::AST::Block)-instance-method","name":"blocks","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(HCL::AST::Block)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Block.html\">HCL::AST::Block</a>)","location":{"filename":"src/hcl/ast/body.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/body.cr#L4"},"def":{"name":"blocks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@blocks"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/CallExpr","path":"HCL/AST/CallExpr.html","kind":"class","full_name":"HCL::AST::CallExpr","name":"CallExpr","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/call_expr.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/call_expr.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(id:String,args:Array(Node),varadic:Bool,**kwargs)-class-method","html_id":"new(id:String,args:Array(Node),varadic:Bool,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Node)"},{"name":"varadic","doc":null,"default_value":"","external_name":"varadic","restriction":"Bool"}],"args_string":"(id : String, args : Array(Node), varadic : Bool, **kwargs)","args_html":"(id : <a href=\"../../String.html\">String</a>, args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Node.html\">Node</a>), varadic : <a href=\"../../Bool.html\">Bool</a>, **kwargs)","location":{"filename":"src/hcl/ast/call_expr.cr","line_number":7,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/call_expr.cr#L7"},"def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"String"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Node)"},{"name":"varadic","doc":null,"default_value":"","external_name":"varadic","restriction":"Bool"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, args, varadic, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"args:Array(HCL::AST::Node)-instance-method","html_id":"args:Array(HCL::AST::Node)-instance-method","name":"args","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(HCL::AST::Node)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>)","location":{"filename":"src/hcl/ast/call_expr.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/call_expr.cr#L4"},"def":{"name":"args","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@args"}},{"id":"id:String-instance-method","html_id":"id:String-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/hcl/ast/call_expr.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/call_expr.cr#L4"},"def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id"}},{"id":"varadic?:Bool-instance-method","html_id":"varadic?:Bool-instance-method","name":"varadic?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../../Bool.html\">Bool</a>","location":{"filename":"src/hcl/ast/call_expr.cr","line_number":5,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/call_expr.cr#L5"},"def":{"name":"varadic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@varadic"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/CondExpr","path":"HCL/AST/CondExpr.html","kind":"class","full_name":"HCL::AST::CondExpr","name":"CondExpr","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/cond_expr.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/cond_expr.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(predicate:Expression,true_expr:Expression,false_expr:Expression,**kwargs)-class-method","html_id":"new(predicate:Expression,true_expr:Expression,false_expr:Expression,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"predicate","doc":null,"default_value":"","external_name":"predicate","restriction":"Expression"},{"name":"true_expr","doc":null,"default_value":"","external_name":"true_expr","restriction":"Expression"},{"name":"false_expr","doc":null,"default_value":"","external_name":"false_expr","restriction":"Expression"}],"args_string":"(predicate : Expression, true_expr : Expression, false_expr : Expression, **kwargs)","args_html":"(predicate : <a href=\"../../HCL/AST/Expression.html\">Expression</a>, true_expr : <a href=\"../../HCL/AST/Expression.html\">Expression</a>, false_expr : <a href=\"../../HCL/AST/Expression.html\">Expression</a>, **kwargs)","location":{"filename":"src/hcl/ast/cond_expr.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/cond_expr.cr#L6"},"def":{"name":"new","args":[{"name":"predicate","doc":null,"default_value":"","external_name":"predicate","restriction":"Expression"},{"name":"true_expr","doc":null,"default_value":"","external_name":"true_expr","restriction":"Expression"},{"name":"false_expr","doc":null,"default_value":"","external_name":"false_expr","restriction":"Expression"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(predicate, true_expr, false_expr, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"false_expr:HCL::AST::Expression-instance-method","html_id":"false_expr:HCL::AST::Expression-instance-method","name":"false_expr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>","location":{"filename":"src/hcl/ast/cond_expr.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/cond_expr.cr#L4"},"def":{"name":"false_expr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@false_expr"}},{"id":"predicate:HCL::AST::Expression-instance-method","html_id":"predicate:HCL::AST::Expression-instance-method","name":"predicate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>","location":{"filename":"src/hcl/ast/cond_expr.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/cond_expr.cr#L4"},"def":{"name":"predicate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@predicate"}},{"id":"true_expr:HCL::AST::Expression-instance-method","html_id":"true_expr:HCL::AST::Expression-instance-method","name":"true_expr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>","location":{"filename":"src/hcl/ast/cond_expr.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/cond_expr.cr#L4"},"def":{"name":"true_expr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@true_expr"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/Document","path":"HCL/AST/Document.html","kind":"class","full_name":"HCL::AST::Document","name":"Document","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Body","kind":"class","full_name":"HCL::AST::Body","name":"Body"},"ancestors":[{"html_id":"hcl/HCL/AST/Body","kind":"class","full_name":"HCL::AST::Body","name":"Body"},{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/document.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/document.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"evaluate-instance-method","html_id":"evaluate-instance-method","name":"evaluate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/document.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/document.cr#L12"},"def":{"name":"evaluate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"evaluate(ExpressionContext.default_context)"}},{"id":"unwrap(ctx:ExpressionContext)-instance-method","html_id":"unwrap(ctx:ExpressionContext)-instance-method","name":"unwrap","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"ExpressionContext"}],"args_string":"(ctx : ExpressionContext)","args_html":"(ctx : <a href=\"../../HCL/ExpressionContext.html\">ExpressionContext</a>)","location":{"filename":"src/hcl/ast/document.cr","line_number":8,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/document.cr#L8"},"def":{"name":"unwrap","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"ExpressionContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(evaluate(ctx)).unwrap"}},{"id":"unwrap-instance-method","html_id":"unwrap-instance-method","name":"unwrap","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/document.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/document.cr#L4"},"def":{"name":"unwrap","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"unwrap(ExpressionContext.default_context)"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/Expression","path":"HCL/AST/Expression.html","kind":"class","full_name":"HCL::AST::Expression","name":"Expression","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/expression.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/expression.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(children:Array(Node),**kwargs)-class-method","html_id":"new(children:Array(Node),**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"children","doc":null,"default_value":"","external_name":"children","restriction":"Array(Node)"}],"args_string":"(children : Array(Node), **kwargs)","args_html":"(children : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Node.html\">Node</a>), **kwargs)","location":{"filename":"src/hcl/ast/expression.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/expression.cr#L6"},"def":{"name":"new","args":[{"name":"children","doc":null,"default_value":"","external_name":"children","restriction":"Array(Node)"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(children, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"children:Array(HCL::AST::Node)-instance-method","html_id":"children:Array(HCL::AST::Node)-instance-method","name":"children","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(HCL::AST::Node)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>)","location":{"filename":"src/hcl/ast/expression.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/expression.cr#L4"},"def":{"name":"children","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@children"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/ForExpr","path":"HCL/AST/ForExpr.html","kind":"class","full_name":"HCL::AST::ForExpr","name":"ForExpr","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/for_expr.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"TYPE_LIST","name":"TYPE_LIST","value":":list","doc":null,"summary":null},{"id":"TYPE_MAP","name":"TYPE_MAP","value":":map","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(for_type:Symbol,coll_expr:Expression,value_name:Identifier,value_expr:Expression,key_name:Identifier?=nil,key_expr:Expression?=nil,cond_expr:Expression?=nil,**kwargs)-class-method","html_id":"new(for_type:Symbol,coll_expr:Expression,value_name:Identifier,value_expr:Expression,key_name:Identifier?=nil,key_expr:Expression?=nil,cond_expr:Expression?=nil,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"for_type","doc":null,"default_value":"","external_name":"for_type","restriction":"Symbol"},{"name":"coll_expr","doc":null,"default_value":"","external_name":"coll_expr","restriction":"Expression"},{"name":"value_name","doc":null,"default_value":"","external_name":"value_name","restriction":"Identifier"},{"name":"value_expr","doc":null,"default_value":"","external_name":"value_expr","restriction":"Expression"},{"name":"key_name","doc":null,"default_value":"nil","external_name":"key_name","restriction":"Identifier | ::Nil"},{"name":"key_expr","doc":null,"default_value":"nil","external_name":"key_expr","restriction":"Expression | ::Nil"},{"name":"cond_expr","doc":null,"default_value":"nil","external_name":"cond_expr","restriction":"Expression | ::Nil"}],"args_string":"(for_type : Symbol, coll_expr : Expression, value_name : Identifier, value_expr : Expression, key_name : Identifier? = <span class=\"n\">nil</span>, key_expr : Expression? = <span class=\"n\">nil</span>, cond_expr : Expression? = <span class=\"n\">nil</span>, **kwargs)","args_html":"(for_type : <a href=\"../../Symbol.html\">Symbol</a>, coll_expr : <a href=\"../../HCL/AST/Expression.html\">Expression</a>, value_name : <a href=\"../../HCL/AST/Identifier.html\">Identifier</a>, value_expr : <a href=\"../../HCL/AST/Expression.html\">Expression</a>, key_name : <a href=\"../../HCL/AST/Identifier.html\">Identifier</a>? = <span class=\"n\">nil</span>, key_expr : <a href=\"../../HCL/AST/Expression.html\">Expression</a>? = <span class=\"n\">nil</span>, cond_expr : <a href=\"../../HCL/AST/Expression.html\">Expression</a>? = <span class=\"n\">nil</span>, **kwargs)","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":17,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L17"},"def":{"name":"new","args":[{"name":"for_type","doc":null,"default_value":"","external_name":"for_type","restriction":"Symbol"},{"name":"coll_expr","doc":null,"default_value":"","external_name":"coll_expr","restriction":"Expression"},{"name":"value_name","doc":null,"default_value":"","external_name":"value_name","restriction":"Identifier"},{"name":"value_expr","doc":null,"default_value":"","external_name":"value_expr","restriction":"Expression"},{"name":"key_name","doc":null,"default_value":"nil","external_name":"key_name","restriction":"Identifier | ::Nil"},{"name":"key_expr","doc":null,"default_value":"nil","external_name":"key_expr","restriction":"Expression | ::Nil"},{"name":"cond_expr","doc":null,"default_value":"nil","external_name":"cond_expr","restriction":"Expression | ::Nil"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(for_type, coll_expr, value_name, value_expr, key_name, key_expr, cond_expr, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"coll_expr:HCL::AST::Expression-instance-method","html_id":"coll_expr:HCL::AST::Expression-instance-method","name":"coll_expr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":15,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L15"},"def":{"name":"coll_expr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@coll_expr"}},{"id":"cond_expr:HCL::AST::Expression?-instance-method","html_id":"cond_expr:HCL::AST::Expression?-instance-method","name":"cond_expr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression?","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>?","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":15,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L15"},"def":{"name":"cond_expr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cond_expr"}},{"id":"end_tag-instance-method","html_id":"end_tag-instance-method","name":"end_tag","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":49,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L49"},"def":{"name":"end_tag","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if is_map_type?\n  \"}\"\nelse\n  \"]\"\nend"}},{"id":"for_type:Symbol-instance-method","html_id":"for_type:Symbol-instance-method","name":"for_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","args_html":" : <a href=\"../../Symbol.html\">Symbol</a>","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":15,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L15"},"def":{"name":"for_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@for_type"}},{"id":"is_map_type?-instance-method","html_id":"is_map_type?-instance-method","name":"is_map_type?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":37,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L37"},"def":{"name":"is_map_type?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"for_type == TYPE_MAP"}},{"id":"key_expr:HCL::AST::Expression?-instance-method","html_id":"key_expr:HCL::AST::Expression?-instance-method","name":"key_expr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression?","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>?","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":15,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L15"},"def":{"name":"key_expr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key_expr"}},{"id":"key_name:String?-instance-method","html_id":"key_name:String?-instance-method","name":"key_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../../String.html\">String</a>?","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":15,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L15"},"def":{"name":"key_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key_name"}},{"id":"start_tag-instance-method","html_id":"start_tag-instance-method","name":"start_tag","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":41,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L41"},"def":{"name":"start_tag","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if is_map_type?\n  \"{\"\nelse\n  \"[\"\nend"}},{"id":"value_expr:HCL::AST::Expression-instance-method","html_id":"value_expr:HCL::AST::Expression-instance-method","name":"value_expr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":15,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L15"},"def":{"name":"value_expr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value_expr"}},{"id":"value_name:String-instance-method","html_id":"value_name:String-instance-method","name":"value_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/hcl/ast/for_expr.cr","line_number":15,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/for_expr.cr#L15"},"def":{"name":"value_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value_name"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/GetAttrExpr","path":"HCL/AST/GetAttrExpr.html","kind":"class","full_name":"HCL::AST::GetAttrExpr","name":"GetAttrExpr","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/get_attr_expr.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/get_attr_expr.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(attribute:Identifier,**kwargs)-class-method","html_id":"new(attribute:Identifier,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Identifier"}],"args_string":"(attribute : Identifier, **kwargs)","args_html":"(attribute : <a href=\"../../HCL/AST/Identifier.html\">Identifier</a>, **kwargs)","location":{"filename":"src/hcl/ast/get_attr_expr.cr","line_number":8,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/get_attr_expr.cr#L8"},"def":{"name":"new","args":[{"name":"attribute","doc":null,"default_value":"","external_name":"attribute","restriction":"Identifier"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(attribute, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"attribute_name:String-instance-method","html_id":"attribute_name:String-instance-method","name":"attribute_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/hcl/ast/get_attr_expr.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/get_attr_expr.cr#L6"},"def":{"name":"attribute_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attribute_name"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/Heredoc","path":"HCL/AST/Heredoc.html","kind":"class","full_name":"HCL::AST::Heredoc","name":"Heredoc","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/heredoc.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/heredoc.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(delimiter:String,content:Template,**kwargs)-class-method","html_id":"new(delimiter:String,content:Template,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"delimiter","doc":null,"default_value":"","external_name":"delimiter","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Template"}],"args_string":"(delimiter : String, content : Template, **kwargs)","args_html":"(delimiter : <a href=\"../../String.html\">String</a>, content : <a href=\"../../HCL/AST/Template.html\">Template</a>, **kwargs)","location":{"filename":"src/hcl/ast/heredoc.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/heredoc.cr#L6"},"def":{"name":"new","args":[{"name":"delimiter","doc":null,"default_value":"","external_name":"delimiter","restriction":"String"},{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Template"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(delimiter, content, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"content:HCL::AST::Template-instance-method","html_id":"content:HCL::AST::Template-instance-method","name":"content","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Template","args_html":" : <a href=\"../../HCL/AST/Template.html\">HCL::AST::Template</a>","location":{"filename":"src/hcl/ast/heredoc.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/heredoc.cr#L4"},"def":{"name":"content","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content"}},{"id":"delimiter:String-instance-method","html_id":"delimiter:String-instance-method","name":"delimiter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/hcl/ast/heredoc.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/heredoc.cr#L4"},"def":{"name":"delimiter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@delimiter"}},{"id":"indent_size:Int32-instance-method","html_id":"indent_size:Int32-instance-method","name":"indent_size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/hcl/ast/heredoc.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/heredoc.cr#L4"},"def":{"name":"indent_size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@indent_size"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/Identifier","path":"HCL/AST/Identifier.html","kind":"class","full_name":"HCL::AST::Identifier","name":"Identifier","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/identifier.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/identifier.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:Symbol,**kwargs)-class-method","html_id":"new(name:Symbol,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"args_string":"(name : Symbol, **kwargs)","args_html":"(name : <a href=\"../../Symbol.html\">Symbol</a>, **kwargs)","location":{"filename":"src/hcl/ast/identifier.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/identifier.cr#L4"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"Symbol"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(*args,**kwargs)-class-method","html_id":"new(*args,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs)","args_html":"(*args, **kwargs)","location":{"filename":"src/hcl/ast/identifier.cr","line_number":8,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/identifier.cr#L8"},"def":{"name":"new","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(*args, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"name-instance-method","html_id":"name-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/identifier.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/identifier.cr#L12"},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"source"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/IndexExpr","path":"HCL/AST/IndexExpr.html","kind":"class","full_name":"HCL::AST::IndexExpr","name":"IndexExpr","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/index_expr.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/index_expr.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(index_exp:Expression,**kwargs)-class-method","html_id":"new(index_exp:Expression,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"index_exp","doc":null,"default_value":"","external_name":"index_exp","restriction":"Expression"}],"args_string":"(index_exp : Expression, **kwargs)","args_html":"(index_exp : <a href=\"../../HCL/AST/Expression.html\">Expression</a>, **kwargs)","location":{"filename":"src/hcl/ast/index_expr.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/index_expr.cr#L6"},"def":{"name":"new","args":[{"name":"index_exp","doc":null,"default_value":"","external_name":"index_exp","restriction":"Expression"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(index_exp, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"index_exp:HCL::AST::Expression-instance-method","html_id":"index_exp:HCL::AST::Expression-instance-method","name":"index_exp","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>","location":{"filename":"src/hcl/ast/index_expr.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/index_expr.cr#L4"},"def":{"name":"index_exp","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@index_exp"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/List","path":"HCL/AST/List.html","kind":"class","full_name":"HCL::AST::List","name":"List","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/list.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/list.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(**kwargs)-class-method","html_id":"new(**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(**kwargs)","args_html":"(**kwargs)","location":{"filename":"src/hcl/ast/list.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/list.cr#L6"},"def":{"name":"new","args":[],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(**kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(node:Node)-instance-method","html_id":"<<(node:Node)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Node"}],"args_string":"(node : Node)","args_html":"(node : <a href=\"../../HCL/AST/Node.html\">Node</a>)","location":{"filename":"src/hcl/ast/list.cr","line_number":11,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/list.cr#L11"},"def":{"name":"<<","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@children << node"}},{"id":"children:Array(HCL::AST::Node)-instance-method","html_id":"children:Array(HCL::AST::Node)-instance-method","name":"children","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(HCL::AST::Node)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>)","location":{"filename":"src/hcl/ast/list.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/list.cr#L4"},"def":{"name":"children","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@children"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/Literal","path":"HCL/AST/Literal.html","kind":"class","full_name":"HCL::AST::Literal","name":"Literal","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/literal.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/literal.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"FALSE_STR","name":"FALSE_STR","value":"\"false\"","doc":null,"summary":null},{"id":"NULL_STR","name":"NULL_STR","value":"\"null\"","doc":null,"summary":null},{"id":"TRUE_STR","name":"TRUE_STR","value":"\"true\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"false?-instance-method","html_id":"false?-instance-method","name":"false?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/literal.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/literal.cr#L12"},"def":{"name":"false?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"source == FALSE_STR"}},{"id":"null?-instance-method","html_id":"null?-instance-method","name":"null?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/literal.cr","line_number":16,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/literal.cr#L16"},"def":{"name":"null?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"source == NULL_STR"}},{"id":"string?-instance-method","html_id":"string?-instance-method","name":"string?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/literal.cr","line_number":20,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/literal.cr#L20"},"def":{"name":"string?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!([NULL_STR, TRUE_STR, FALSE_STR].includes?(source))"}},{"id":"true?-instance-method","html_id":"true?-instance-method","name":"true?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/literal.cr","line_number":8,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/literal.cr#L8"},"def":{"name":"true?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"source == TRUE_STR"}},{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/ast/literal.cr","line_number":24,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/literal.cr#L24"},"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if true?\n  true\nelse\n  if false?\n    false\n  else\n    if null?\n      nil\n    else\n      source\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/Map","path":"HCL/AST/Map.html","kind":"class","full_name":"HCL::AST::Map","name":"Map","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/map.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/map.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(attributes:Hash(String,Node)=Hash(String,Node).new,**kwargs)-class-method","html_id":"new(attributes:Hash(String,Node)=Hash(String,Node).new,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"attributes","doc":null,"default_value":"Hash(String, Node).new","external_name":"attributes","restriction":"Hash(String, Node)"}],"args_string":"(attributes : Hash(String, Node) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">Node</span>).<span class=\"k\">new</span>, **kwargs)","args_html":"(attributes : <a href=\"../../Hash.html\">Hash</a>(<a href=\"../../String.html\">String</a>, <a href=\"../../HCL/AST/Node.html\">Node</a>) = <span class=\"t\">Hash</span>(<span class=\"t\">String</span>, <span class=\"t\">Node</span>).<span class=\"k\">new</span>, **kwargs)","location":{"filename":"src/hcl/ast/map.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/map.cr#L6"},"def":{"name":"new","args":[{"name":"attributes","doc":null,"default_value":"Hash(String, Node).new","external_name":"attributes","restriction":"Hash(String, Node)"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(attributes, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"attributes:Hash(String,HCL::AST::Node)-instance-method","html_id":"attributes:Hash(String,HCL::AST::Node)-instance-method","name":"attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, HCL::AST::Node)","args_html":" : <a href=\"../../Hash.html\">Hash</a>(<a href=\"../../String.html\">String</a>, <a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>)","location":{"filename":"src/hcl/ast/map.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/map.cr#L4"},"def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attributes"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/Node","path":"HCL/AST/Node.html","kind":"class","full_name":"HCL::AST::Node","name":"Node","abstract":true,"superclass":{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/node.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/node.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/HCL/AST/Body","kind":"class","full_name":"HCL::AST::Body","name":"Body"},{"html_id":"hcl/HCL/AST/CallExpr","kind":"class","full_name":"HCL::AST::CallExpr","name":"CallExpr"},{"html_id":"hcl/HCL/AST/CondExpr","kind":"class","full_name":"HCL::AST::CondExpr","name":"CondExpr"},{"html_id":"hcl/HCL/AST/Expression","kind":"class","full_name":"HCL::AST::Expression","name":"Expression"},{"html_id":"hcl/HCL/AST/ForExpr","kind":"class","full_name":"HCL::AST::ForExpr","name":"ForExpr"},{"html_id":"hcl/HCL/AST/GetAttrExpr","kind":"class","full_name":"HCL::AST::GetAttrExpr","name":"GetAttrExpr"},{"html_id":"hcl/HCL/AST/Heredoc","kind":"class","full_name":"HCL::AST::Heredoc","name":"Heredoc"},{"html_id":"hcl/HCL/AST/Identifier","kind":"class","full_name":"HCL::AST::Identifier","name":"Identifier"},{"html_id":"hcl/HCL/AST/IndexExpr","kind":"class","full_name":"HCL::AST::IndexExpr","name":"IndexExpr"},{"html_id":"hcl/HCL/AST/List","kind":"class","full_name":"HCL::AST::List","name":"List"},{"html_id":"hcl/HCL/AST/Literal","kind":"class","full_name":"HCL::AST::Literal","name":"Literal"},{"html_id":"hcl/HCL/AST/Map","kind":"class","full_name":"HCL::AST::Map","name":"Map"},{"html_id":"hcl/HCL/AST/Number","kind":"class","full_name":"HCL::AST::Number","name":"Number"},{"html_id":"hcl/HCL/AST/OpExpr","kind":"class","full_name":"HCL::AST::OpExpr","name":"OpExpr"},{"html_id":"hcl/HCL/AST/SplatExpr","kind":"class","full_name":"HCL::AST::SplatExpr","name":"SplatExpr"},{"html_id":"hcl/HCL/AST/Template","kind":"class","full_name":"HCL::AST::Template","name":"Template"},{"html_id":"hcl/HCL/AST/TemplateForExpr","kind":"class","full_name":"HCL::AST::TemplateForExpr","name":"TemplateForExpr"},{"html_id":"hcl/HCL/AST/TemplateIf","kind":"class","full_name":"HCL::AST::TemplateIf","name":"TemplateIf"},{"html_id":"hcl/HCL/AST/TemplateInterpolation","kind":"class","full_name":"HCL::AST::TemplateInterpolation","name":"TemplateInterpolation"}],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(source:String=&quot;&quot;,token:Pegmatite::Token?=nil)-class-method","html_id":"new(source:String=&quot;&quot;,token:Pegmatite::Token?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"\"\"","external_name":"source","restriction":"String"},{"name":"token","doc":null,"default_value":"nil","external_name":"token","restriction":"Pegmatite::Token | ::Nil"}],"args_string":"(source : String = <span class=\"s\">&quot;&quot;</span>, token : Pegmatite::Token? = <span class=\"n\">nil</span>)","args_html":"(source : <a href=\"../../String.html\">String</a> = <span class=\"s\">&quot;&quot;</span>, token : Pegmatite::Token? = <span class=\"n\">nil</span>)","location":{"filename":"src/hcl/ast/node.cr","line_number":9,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/node.cr#L9"},"def":{"name":"new","args":[{"name":"source","doc":null,"default_value":"\"\"","external_name":"source","restriction":"String"},{"name":"token","doc":null,"default_value":"nil","external_name":"token","restriction":"Pegmatite::Token | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(source, token)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"accept(visitor)-instance-method","html_id":"accept(visitor)-instance-method","name":"accept","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":""}],"args_string":"(visitor)","args_html":"(visitor)","location":{"filename":"src/hcl/ast/node.cr","line_number":14,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/node.cr#L14"},"def":{"name":"accept","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"visitor.visit(self)"}},{"id":"evaluate(ctx:ExpressionContext)-instance-method","html_id":"evaluate(ctx:ExpressionContext)-instance-method","name":"evaluate","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"ExpressionContext"}],"args_string":"(ctx : ExpressionContext)","args_html":"(ctx : <a href=\"../../HCL/ExpressionContext.html\">ExpressionContext</a>)","location":{"filename":"src/hcl/ast/node.cr","line_number":18,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/node.cr#L18"},"def":{"name":"evaluate","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"ExpressionContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"visitor = Visitors::Evaluator.new(ctx)\nself.accept(visitor)\n"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","args_html":"(io)","location":{"filename":"src/hcl/ast/node.cr","line_number":23,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/node.cr#L23"},"def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s(io)"}},{"id":"source:String-instance-method","html_id":"source:String-instance-method","name":"source","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/hcl/ast/node.cr","line_number":7,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/node.cr#L7"},"def":{"name":"source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@source"}},{"id":"to_s(io:IO)-instance-method","html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/hcl/ast/node.cr","line_number":27,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/node.cr#L27"},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"visitor = Visitors::ToSVisitor.new(io)\nself.accept(visitor)\n"}},{"id":"value(ctx:ExpressionContext):Any-instance-method","html_id":"value(ctx:ExpressionContext):Any-instance-method","name":"value","doc":"DEPRECATED: Use `evaluate`","summary":"<p><span class=\"flag red\">DEPRECATED</span>  Use <code><a href=\"../../HCL/AST/Node.html#evaluate(ctx:ExpressionContext)-instance-method\">#evaluate</a></code></p>","abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"ExpressionContext"}],"args_string":"(ctx : ExpressionContext) : Any","args_html":"(ctx : <a href=\"../../HCL/ExpressionContext.html\">ExpressionContext</a>) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/ast/node.cr","line_number":33,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/node.cr#L33"},"def":{"name":"value","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"ExpressionContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"evaluate(ctx)"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/Number","path":"HCL/AST/Number.html","kind":"class","full_name":"HCL::AST::Number","name":"Number","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/number.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/number.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(source:String,token:Pegmatite::Token?=nil)-class-method","html_id":"new(source:String,token:Pegmatite::Token?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"},{"name":"token","doc":null,"default_value":"nil","external_name":"token","restriction":"Pegmatite::Token | ::Nil"}],"args_string":"(source : String, token : Pegmatite::Token? = <span class=\"n\">nil</span>)","args_html":"(source : <a href=\"../../String.html\">String</a>, token : Pegmatite::Token? = <span class=\"n\">nil</span>)","location":{"filename":"src/hcl/ast/number.cr","line_number":10,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/number.cr#L10"},"def":{"name":"new","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String"},{"name":"token","doc":null,"default_value":"nil","external_name":"token","restriction":"Pegmatite::Token | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(source, token)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(number:Value,**kwargs)-class-method","html_id":"new(number:Value,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Value"}],"args_string":"(number : Value, **kwargs)","args_html":"(number : <a href=\"../../HCL/AST/Number/Value.html\">Value</a>, **kwargs)","location":{"filename":"src/hcl/ast/number.cr","line_number":20,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/number.cr#L20"},"def":{"name":"new","args":[{"name":"number","doc":null,"default_value":"","external_name":"number","restriction":"Value"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(number, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"value:Float64|Int64-instance-method","html_id":"value:Float64|Int64-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float64 | Int64","args_html":" : Float64 | Int64","location":{"filename":"src/hcl/ast/number.cr","line_number":8,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/number.cr#L8"},"def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value"}}],"macros":[],"types":[{"html_id":"hcl/HCL/AST/Number/Value","path":"HCL/AST/Number/Value.html","kind":"alias","full_name":"HCL::AST::Number::Value","name":"Value","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/ast/number.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/number.cr#L4"}],"repository_name":"hcl","program":false,"enum":false,"alias":true,"aliased":"(Float64 | Int64)","aliased_html":"Float64 | Int64","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST/Number","kind":"class","full_name":"HCL::AST::Number","name":"Number"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"hcl/HCL/AST/Operand","path":"HCL/AST/Operand.html","kind":"alias","full_name":"HCL::AST::Operand","name":"Operand","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/ast.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast.cr#L4"}],"repository_name":"hcl","program":false,"enum":false,"alias":true,"aliased":"HCL::AST::Node+","aliased_html":"<a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/OpExpr","path":"HCL/AST/OpExpr.html","kind":"class","full_name":"HCL::AST::OpExpr","name":"OpExpr","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/op_expr.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/op_expr.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ADDITION","name":"ADDITION","value":":+","doc":null,"summary":null},{"id":"AND","name":"AND","value":":\"&&\"","doc":null,"summary":null},{"id":"DIVIDE","name":"DIVIDE","value":":/","doc":null,"summary":null},{"id":"EQ","name":"EQ","value":":==","doc":null,"summary":null},{"id":"GT","name":"GT","value":":>","doc":null,"summary":null},{"id":"GTE","name":"GTE","value":":>=","doc":null,"summary":null},{"id":"LT","name":"LT","value":":<","doc":null,"summary":null},{"id":"LTE","name":"LTE","value":":<=","doc":null,"summary":null},{"id":"MOD","name":"MOD","value":":%","doc":null,"summary":null},{"id":"MULTIPLY","name":"MULTIPLY","value":":*","doc":null,"summary":null},{"id":"NEQ","name":"NEQ","value":":!=","doc":null,"summary":null},{"id":"NOT","name":"NOT","value":":!","doc":null,"summary":null},{"id":"OR","name":"OR","value":":\"||\"","doc":null,"summary":null},{"id":"SUBTRACTION","name":"SUBTRACTION","value":":-","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(operator:String,left_operand:Node,right_operand:Node?,**kwargs)-class-method","html_id":"new(operator:String,left_operand:Node,right_operand:Node?,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":"String"},{"name":"left_operand","doc":null,"default_value":"","external_name":"left_operand","restriction":"Node"},{"name":"right_operand","doc":null,"default_value":"","external_name":"right_operand","restriction":"Node | ::Nil"}],"args_string":"(operator : String, left_operand : Node, right_operand : Node?, **kwargs)","args_html":"(operator : <a href=\"../../String.html\">String</a>, left_operand : <a href=\"../../HCL/AST/Node.html\">Node</a>, right_operand : <a href=\"../../HCL/AST/Node.html\">Node</a>?, **kwargs)","location":{"filename":"src/hcl/ast/op_expr.cr","line_number":21,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/op_expr.cr#L21"},"def":{"name":"new","args":[{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":"String"},{"name":"left_operand","doc":null,"default_value":"","external_name":"left_operand","restriction":"Node"},{"name":"right_operand","doc":null,"default_value":"","external_name":"right_operand","restriction":"Node | ::Nil"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(operator, left_operand, right_operand, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"left_operand:HCL::AST::Node-instance-method","html_id":"left_operand:HCL::AST::Node-instance-method","name":"left_operand","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Node","args_html":" : <a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>","location":{"filename":"src/hcl/ast/op_expr.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/op_expr.cr#L4"},"def":{"name":"left_operand","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@left_operand"}},{"id":"operator:Symbol-instance-method","html_id":"operator:Symbol-instance-method","name":"operator","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Symbol","args_html":" : <a href=\"../../Symbol.html\">Symbol</a>","location":{"filename":"src/hcl/ast/op_expr.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/op_expr.cr#L4"},"def":{"name":"operator","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@operator"}},{"id":"right_operand:HCL::AST::Node?-instance-method","html_id":"right_operand:HCL::AST::Node?-instance-method","name":"right_operand","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Node?","args_html":" : <a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>?","location":{"filename":"src/hcl/ast/op_expr.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/op_expr.cr#L4"},"def":{"name":"right_operand","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@right_operand"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/SplatExpr","path":"HCL/AST/SplatExpr.html","kind":"class","full_name":"HCL::AST::SplatExpr","name":"SplatExpr","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/splat_expr.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/splat_expr.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/Template","path":"HCL/AST/Template.html","kind":"class","full_name":"HCL::AST::Template","name":"Template","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/template.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(children:Array(Node),**kwargs)-class-method","html_id":"new(children:Array(Node),**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"children","doc":null,"default_value":"","external_name":"children","restriction":"Array(Node)"}],"args_string":"(children : Array(Node), **kwargs)","args_html":"(children : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Node.html\">Node</a>), **kwargs)","location":{"filename":"src/hcl/ast/template.cr","line_number":9,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template.cr#L9"},"def":{"name":"new","args":[{"name":"children","doc":null,"default_value":"","external_name":"children","restriction":"Array(Node)"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(children, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"children:Array(HCL::AST::Node)-instance-method","html_id":"children:Array(HCL::AST::Node)-instance-method","name":"children","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(HCL::AST::Node)","args_html":" : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>)","location":{"filename":"src/hcl/ast/template.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template.cr#L6"},"def":{"name":"children","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@children"}},{"id":"quoted?:Bool-instance-method","html_id":"quoted?:Bool-instance-method","name":"quoted?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../../Bool.html\">Bool</a>","location":{"filename":"src/hcl/ast/template.cr","line_number":7,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template.cr#L7"},"def":{"name":"quoted?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@quoted"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/TemplateForExpr","path":"HCL/AST/TemplateForExpr.html","kind":"class","full_name":"HCL::AST::TemplateForExpr","name":"TemplateForExpr","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/template_for_expr.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_for_expr.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(coll_expr:Expression,value_name:Identifier,tpl_expr:Template,key_name:Identifier?=nil,**kwargs)-class-method","html_id":"new(coll_expr:Expression,value_name:Identifier,tpl_expr:Template,key_name:Identifier?=nil,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"coll_expr","doc":null,"default_value":"","external_name":"coll_expr","restriction":"Expression"},{"name":"value_name","doc":null,"default_value":"","external_name":"value_name","restriction":"Identifier"},{"name":"tpl_expr","doc":null,"default_value":"","external_name":"tpl_expr","restriction":"Template"},{"name":"key_name","doc":null,"default_value":"nil","external_name":"key_name","restriction":"Identifier | ::Nil"}],"args_string":"(coll_expr : Expression, value_name : Identifier, tpl_expr : Template, key_name : Identifier? = <span class=\"n\">nil</span>, **kwargs)","args_html":"(coll_expr : <a href=\"../../HCL/AST/Expression.html\">Expression</a>, value_name : <a href=\"../../HCL/AST/Identifier.html\">Identifier</a>, tpl_expr : <a href=\"../../HCL/AST/Template.html\">Template</a>, key_name : <a href=\"../../HCL/AST/Identifier.html\">Identifier</a>? = <span class=\"n\">nil</span>, **kwargs)","location":{"filename":"src/hcl/ast/template_for_expr.cr","line_number":11,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_for_expr.cr#L11"},"def":{"name":"new","args":[{"name":"coll_expr","doc":null,"default_value":"","external_name":"coll_expr","restriction":"Expression"},{"name":"value_name","doc":null,"default_value":"","external_name":"value_name","restriction":"Identifier"},{"name":"tpl_expr","doc":null,"default_value":"","external_name":"tpl_expr","restriction":"Template"},{"name":"key_name","doc":null,"default_value":"nil","external_name":"key_name","restriction":"Identifier | ::Nil"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(coll_expr, value_name, tpl_expr, key_name, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"coll_expr:HCL::AST::Expression-instance-method","html_id":"coll_expr:HCL::AST::Expression-instance-method","name":"coll_expr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>","location":{"filename":"src/hcl/ast/template_for_expr.cr","line_number":9,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_for_expr.cr#L9"},"def":{"name":"coll_expr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@coll_expr"}},{"id":"key_name:String?-instance-method","html_id":"key_name:String?-instance-method","name":"key_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : <a href=\"../../String.html\">String</a>?","location":{"filename":"src/hcl/ast/template_for_expr.cr","line_number":9,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_for_expr.cr#L9"},"def":{"name":"key_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key_name"}},{"id":"tpl_expr:HCL::AST::Template-instance-method","html_id":"tpl_expr:HCL::AST::Template-instance-method","name":"tpl_expr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Template","args_html":" : <a href=\"../../HCL/AST/Template.html\">HCL::AST::Template</a>","location":{"filename":"src/hcl/ast/template_for_expr.cr","line_number":9,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_for_expr.cr#L9"},"def":{"name":"tpl_expr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tpl_expr"}},{"id":"value_name:String-instance-method","html_id":"value_name:String-instance-method","name":"value_name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../../String.html\">String</a>","location":{"filename":"src/hcl/ast/template_for_expr.cr","line_number":9,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_for_expr.cr#L9"},"def":{"name":"value_name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value_name"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/TemplateIf","path":"HCL/AST/TemplateIf.html","kind":"class","full_name":"HCL::AST::TemplateIf","name":"TemplateIf","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/template_if.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_if.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(predicate:Expression,true_tpl:Template,false_tpl:Template?=nil,**kwargs)-class-method","html_id":"new(predicate:Expression,true_tpl:Template,false_tpl:Template?=nil,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"predicate","doc":null,"default_value":"","external_name":"predicate","restriction":"Expression"},{"name":"true_tpl","doc":null,"default_value":"","external_name":"true_tpl","restriction":"Template"},{"name":"false_tpl","doc":null,"default_value":"nil","external_name":"false_tpl","restriction":"Template | ::Nil"}],"args_string":"(predicate : Expression, true_tpl : Template, false_tpl : Template? = <span class=\"n\">nil</span>, **kwargs)","args_html":"(predicate : <a href=\"../../HCL/AST/Expression.html\">Expression</a>, true_tpl : <a href=\"../../HCL/AST/Template.html\">Template</a>, false_tpl : <a href=\"../../HCL/AST/Template.html\">Template</a>? = <span class=\"n\">nil</span>, **kwargs)","location":{"filename":"src/hcl/ast/template_if.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_if.cr#L6"},"def":{"name":"new","args":[{"name":"predicate","doc":null,"default_value":"","external_name":"predicate","restriction":"Expression"},{"name":"true_tpl","doc":null,"default_value":"","external_name":"true_tpl","restriction":"Template"},{"name":"false_tpl","doc":null,"default_value":"nil","external_name":"false_tpl","restriction":"Template | ::Nil"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(predicate, true_tpl, false_tpl, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"false_tpl:HCL::AST::Template?-instance-method","html_id":"false_tpl:HCL::AST::Template?-instance-method","name":"false_tpl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Template?","args_html":" : <a href=\"../../HCL/AST/Template.html\">HCL::AST::Template</a>?","location":{"filename":"src/hcl/ast/template_if.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_if.cr#L4"},"def":{"name":"false_tpl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@false_tpl"}},{"id":"predicate:HCL::AST::Expression-instance-method","html_id":"predicate:HCL::AST::Expression-instance-method","name":"predicate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>","location":{"filename":"src/hcl/ast/template_if.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_if.cr#L4"},"def":{"name":"predicate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@predicate"}},{"id":"true_tpl:HCL::AST::Template-instance-method","html_id":"true_tpl:HCL::AST::Template-instance-method","name":"true_tpl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Template","args_html":" : <a href=\"../../HCL/AST/Template.html\">HCL::AST::Template</a>","location":{"filename":"src/hcl/ast/template_if.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_if.cr#L4"},"def":{"name":"true_tpl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@true_tpl"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/AST/TemplateInterpolation","path":"HCL/AST/TemplateInterpolation.html","kind":"class","full_name":"HCL::AST::TemplateInterpolation","name":"TemplateInterpolation","abstract":false,"superclass":{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},"ancestors":[{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/ast/template_interpolation.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_interpolation.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/AST","kind":"module","full_name":"HCL::AST","name":"AST"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(expression:Expression,**kwargs)-class-method","html_id":"new(expression:Expression,**kwargs)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"Expression"}],"args_string":"(expression : Expression, **kwargs)","args_html":"(expression : <a href=\"../../HCL/AST/Expression.html\">Expression</a>, **kwargs)","location":{"filename":"src/hcl/ast/template_interpolation.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_interpolation.cr#L6"},"def":{"name":"new","args":[{"name":"expression","doc":null,"default_value":"","external_name":"expression","restriction":"Expression"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(expression, **kwargs)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"expression:HCL::AST::Expression-instance-method","html_id":"expression:HCL::AST::Expression-instance-method","name":"expression","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Expression","args_html":" : <a href=\"../../HCL/AST/Expression.html\">HCL::AST::Expression</a>","location":{"filename":"src/hcl/ast/template_interpolation.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/ast/template_interpolation.cr#L4"},"def":{"name":"expression","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@expression"}}],"macros":[],"types":[]}]},{"html_id":"hcl/HCL/Attribute","path":"HCL/Attribute.html","kind":"annotation","full_name":"HCL::Attribute","name":"Attribute","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/serializable.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L6"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"Denotes an attribute within an HCL body (either a document or block).\nCan be applied to getters, setters, `property`, and instance variables.\n\nSee `HCL::Serializable` for more info.","summary":"<p>Denotes an attribute within an HCL body (either a document or block).</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Block","path":"HCL/Block.html","kind":"annotation","full_name":"HCL::Block","name":"Block","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/serializable.cr","line_number":13,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L13"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"Denotes a block within an HCL body (either a document or block).\nCan be applied to getters, setters, `property`, and instance variables.\n\nSee `HCL::Serializable` for more info.","summary":"<p>Denotes a block within an HCL body (either a document or block).</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Builder","path":"HCL/Builder.html","kind":"class","full_name":"HCL::Builder","name":"Builder","abstract":false,"superclass":{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/builder.cr","line_number":26,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L26"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"An HCL builder helps build a valid HCL abstract syntax tree.\n\nAn `HCL::BuildError` will be raised on any attempts to create an AST\nthat would be invalid (e.g. setting an attribute's value to a block)\n\n```\nrequire \"hcl\"\n\nstring = HCL.build do |hcl|\n  hcl.block \"aws_instance\", \"c4.xlarge\" do |blk|\n    blk.attribute \"security_group_ids\" do\n      blk.list do |l|\n        l << l.literal(\"sg-123\")\n        l << l.literal(\"sg-456\")\n      end\n    end\n    blk.attribute(\"region\") { \"us-west-2\" }\n    blk.block(\"tags\") do |t|\n      t.attribute(\"name\") { \"test\" }\n    end\n  end\nend\nstring # => \"aws_instance \\\"c4.xlarge\\\" {\\n  security_group_ids = [\\\"sg-123\\\", \\\"sg-456\\\"]\\n  region = \\\"us-west-2\\\"\\n  tags {\\n    name = \\\"test\\\"\\m}\"\n```","summary":"<p>An HCL builder helps build a valid HCL abstract syntax tree.</p>","class_methods":[{"id":"build(node:AST::Node?=AST::Document.new,&)-class-method","html_id":"build(node:AST::Node?=AST::Document.new,&)-class-method","name":"build","doc":"Yields an `HCL::Builder` instance for the given root node, which defaults to\n`HCL::AST::Document`. Returns the `HCL::Builder` instance.","summary":"<p>Yields an <code><a href=\"../HCL/Builder.html\">HCL::Builder</a></code> instance for the given root node, which defaults to <code><a href=\"../HCL/AST/Document.html\">HCL::AST::Document</a></code>.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"AST::Document.new","external_name":"node","restriction":"AST::Node | ::Nil"}],"args_string":"(node : AST::Node? = <span class=\"t\">AST</span><span class=\"t\">::</span><span class=\"t\">Document</span>.<span class=\"k\">new</span>, &)","args_html":"(node : <a href=\"../HCL/AST/Node.html\">AST::Node</a>? = <span class=\"t\">AST</span><span class=\"t\">::</span><span class=\"t\">Document</span>.<span class=\"k\">new</span>, &)","location":{"filename":"src/hcl/builder.cr","line_number":31,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L31"},"def":{"name":"build","args":[{"name":"node","doc":null,"default_value":"AST::Document.new","external_name":"node","restriction":"AST::Node | ::Nil"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(node)).tap do |builder|\n  yield builder\nend"}}],"constructors":[{"id":"new(node:AST::Node)-class-method","html_id":"new(node:AST::Node)-class-method","name":"new","doc":"Instantiate's a new `HCL::Builder` with the given root node. This\ngenerally does not need to be invoked directly.","summary":"<p>Instantiate's a new <code><a href=\"../HCL/Builder.html\">HCL::Builder</a></code> with the given root node.</p>","abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(node : AST::Node)","args_html":"(node : <a href=\"../HCL/AST/Node.html\">AST::Node</a>)","location":{"filename":"src/hcl/builder.cr","line_number":39,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L39"},"def":{"name":"new","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(node)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"<<(value:AST::Node)-instance-method","html_id":"<<(value:AST::Node)-instance-method","name":"<<","doc":"Appends an `HCL::AST::Node` to the underlying list node. Raises if the builder is not\nfor a list or if the node is not usable within a list.","summary":"<p>Appends an <code><a href=\"../HCL/AST/Node.html\">HCL::AST::Node</a></code> to the underlying list node.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AST::Node"}],"args_string":"(value : AST::Node)","args_html":"(value : <a href=\"../HCL/AST/Node.html\">AST::Node</a>)","location":{"filename":"src/hcl/builder.cr","line_number":59,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L59"},"def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n = node\nif n.is_a?(AST::List)\n  n << (value_to_node(value))\nelse\n  raise(BuildError.new(\"Cannot use << inside non-list node.\"))\nend\n"}},{"id":"<<(value)-instance-method","html_id":"<<(value)-instance-method","name":"<<","doc":"Appends a value to the the underlying list node. Value most be convertable\nto HCL, either through base types supported by the library or a\n`#to_hcl(builder : HCL::Builder)` method on the object.\n\nRaises if the builder is not for a list or if the node is not usable\nwithin a list.","summary":"<p>Appends a value to the the underlying list node.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/hcl/builder.cr","line_number":74,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L74"},"def":{"name":"<<","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self << (value_to_node(value))"}},{"id":"attribute(name,&)-instance-method","html_id":"attribute(name,&)-instance-method","name":"attribute","doc":"Adds an attribute to the open HCL body or map/object with the value of the\npassed in block. Value must by an AST node or an object convertable to HCL,\neither through base types supported by the library or a\n`#to_hcl(builder : HCL::Builder)` method on the object.","summary":"<p>Adds an attribute to the open HCL body or map/object with the value of the passed in block.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name, &)","args_html":"(name, &)","location":{"filename":"src/hcl/builder.cr","line_number":82,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L82"},"def":{"name":"attribute","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"n = node\nif n.is_a?(AST::Body) || n.is_a?(AST::Map)\n  value = yield self\n  value_node = value_to_node(value)\n  n.attributes[name.to_s] = value_node\nelse\n  raise(BuildError.new(\"Cannot add attribute to non-body node. Must be inside a document or block.\"))\nend\n"}},{"id":"block(name,*args,&)-instance-method","html_id":"block(name,*args,&)-instance-method","name":"block","doc":"Yields a new `HCL::Builder` for building a block. Adds the block to the\nopen HCL body. `name` is the first parameter, but subsequent parameters are\nused as label values on the block. `#label` may also be used within the\nblock to set labels.\n\nRaises if used within a non-body node (i.e. not a document or block)","summary":"<p>Yields a new <code><a href=\"../HCL/Builder.html\">HCL::Builder</a></code> for building a block.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(name, *args, &)","args_html":"(name, *args, &)","location":{"filename":"src/hcl/builder.cr","line_number":101,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L101"},"def":{"name":"block","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"if (n = node).is_a?(AST::Body)\n  block_node = block_node_for_name_and_labels(name, *args)\n  self.class.build(block_node) do |builder|\n    yield builder\n  end\n  n.blocks << block_node\nelse\n  raise(BuildError.new(\"Cannot add block to non-body node. Must be inside a document or block.\"))\nend"}},{"id":"identifier(value)-instance-method","html_id":"identifier(value)-instance-method","name":"identifier","doc":"Returns a new `AST::Identifier` node for the given value.","summary":"<p>Returns a new <code><a href=\"../HCL/AST/Identifier.html\">AST::Identifier</a></code> node for the given value.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/hcl/builder.cr","line_number":118,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L118"},"def":{"name":"identifier","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::Identifier.new(value)"}},{"id":"label(value:Symbol|String)-instance-method","html_id":"label(value:Symbol|String)-instance-method","name":"label","doc":"Appends a new `AST::BlockLabel` node with the given value to the block's\nlabels collection.\n\nRaises if active node is not a block.","summary":"<p>Appends a new <code><a href=\"../HCL/AST/BlockLabel.html\">AST::BlockLabel</a></code> node with the given value to the block's labels collection.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Symbol | String"}],"args_string":"(value : Symbol | String)","args_html":"(value : <a href=\"../Symbol.html\">Symbol</a> | <a href=\"../String.html\">String</a>)","location":{"filename":"src/hcl/builder.cr","line_number":126,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L126"},"def":{"name":"label","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Symbol | String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n = node\nif !n.is_a?(AST::Block)\n  raise(BuildError.new(\"Cannot add a label to non-block node. Must be inside a block.\"))\nend\ncase value\nwhen Symbol\n  n.labels << (AST::Identifier.new(value))\nwhen String\n  n.labels << (AST::Literal.new(value))\nend\n"}},{"id":"list(&)-instance-method","html_id":"list(&)-instance-method","name":"list","doc":"Yields a new `HCL::Builder` for building a list.","summary":"<p>Yields a new <code><a href=\"../HCL/Builder.html\">HCL::Builder</a></code> for building a list.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/hcl/builder.cr","line_number":144,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L144"},"def":{"name":"list","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.build(AST::List.new) do |builder|\n  yield builder\nend"}},{"id":"literal(value:Bool)-instance-method","html_id":"literal(value:Bool)-instance-method","name":"literal","doc":"Returns a new `AST::Literal` node for the given boolean value.","summary":"<p>Returns a new <code><a href=\"../HCL/AST/Literal.html\">AST::Literal</a></code> node for the given boolean value.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"args_string":"(value : Bool)","args_html":"(value : <a href=\"../Bool.html\">Bool</a>)","location":{"filename":"src/hcl/builder.cr","line_number":151,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L151"},"def":{"name":"literal","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::Literal.new(value.to_s)"}},{"id":"literal(value)-instance-method","html_id":"literal(value)-instance-method","name":"literal","doc":"Returns a new `AST::Literal` node for the given value.","summary":"<p>Returns a new <code><a href=\"../HCL/AST/Literal.html\">AST::Literal</a></code> node for the given value.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/hcl/builder.cr","line_number":156,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L156"},"def":{"name":"literal","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AST::Literal.new(value)"}},{"id":"map(&)-instance-method","html_id":"map(&)-instance-method","name":"map","doc":"Yields a new `HCL::Builder` for building a map/object.","summary":"<p>Yields a new <code><a href=\"../HCL/Builder.html\">HCL::Builder</a></code> for building a map/object.</p>","abstract":false,"args":[],"args_string":"(&)","args_html":"(&)","location":{"filename":"src/hcl/builder.cr","line_number":161,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L161"},"def":{"name":"map","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.build(AST::Map.new) do |builder|\n  yield builder\nend"}},{"id":"node:HCL::AST::Node-instance-method","html_id":"node:HCL::AST::Node-instance-method","name":"node","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Node","args_html":" : <a href=\"../HCL/AST/Node.html\">HCL::AST::Node</a>","location":{"filename":"src/hcl/builder.cr","line_number":27,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L27"},"def":{"name":"node","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@node"}},{"id":"number(value)-instance-method","html_id":"number(value)-instance-method","name":"number","doc":"Returns a new `AST::Number` node with the given value\n\nRaises if value cannot be used or converted to a supported number format","summary":"<p>Returns a new <code><a href=\"../HCL/AST/Number.html\">AST::Number</a></code> node with the given value</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"args_string":"(value)","args_html":"(value)","location":{"filename":"src/hcl/builder.cr","line_number":170,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L170"},"def":{"name":"number","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case value\nwhen Float32\n  AST::Number.new(value.to_f64)\nwhen Int32\n  AST::Number.new(value.to_i64)\nwhen Float64, Int64\n  AST::Number.new(value)\nelse\n  raise(BuildError.new(\"#{value.class} cannot be used as a number value.\"))\nend"}},{"id":"to_hcl(_builder:HCL::Builder)-instance-method","html_id":"to_hcl(_builder:HCL::Builder)-instance-method","name":"to_hcl","doc":"Returns the `HCL::AST::Node` for the builder.","summary":"<p>Returns the <code><a href=\"../HCL/AST/Node.html\">HCL::AST::Node</a></code> for the builder.</p>","abstract":false,"args":[{"name":"_builder","doc":null,"default_value":"","external_name":"_builder","restriction":"HCL::Builder"}],"args_string":"(_builder : HCL::Builder)","args_html":"(_builder : <a href=\"../HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/builder.cr","line_number":43,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L43"},"def":{"name":"to_hcl","args":[{"name":"_builder","doc":null,"default_value":"","external_name":"_builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node"}},{"id":"to_hcl(io:IO)-instance-method","html_id":"to_hcl(io:IO)-instance-method","name":"to_hcl","doc":"Writes a string representation of the HCL node to the given IO.","summary":"<p>Writes a string representation of the HCL node to the given IO.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/hcl/builder.cr","line_number":48,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L48"},"def":{"name":"to_hcl","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.to_s(io)"}},{"id":"to_s(io:IO)-instance-method","html_id":"to_s(io:IO)-instance-method","name":"to_s","doc":"Alias for `#to_hcl(io : IO)`.","summary":"<p>Alias for <code><a href=\"../HCL/Builder.html#to_hcl(_builder:HCL::Builder)-instance-method\">#to_hcl(io : IO)</a></code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/hcl/builder.cr","line_number":53,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/builder.cr#L53"},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_hcl(io)"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/BuildError","path":"HCL/BuildError.html","kind":"class","full_name":"HCL::BuildError","name":"BuildError","abstract":false,"superclass":{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/exceptions.cr","line_number":16,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/exceptions.cr#L16"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"Raised when an invalid AST is attempted with `HCL::Builder`","summary":"<p>Raised when an invalid AST is attempted with <code><a href=\"../HCL/Builder.html\">HCL::Builder</a></code></p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/CallError","path":"HCL/CallError.html","kind":"class","full_name":"HCL::CallError","name":"CallError","abstract":false,"superclass":{"html_id":"hcl/HCL/ExpressionError","kind":"class","full_name":"HCL::ExpressionError","name":"ExpressionError"},"ancestors":[{"html_id":"hcl/HCL/ExpressionError","kind":"class","full_name":"HCL::ExpressionError","name":"ExpressionError"},{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/exceptions.cr","line_number":22,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/exceptions.cr#L22"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/HCL/ArityMismatchError","kind":"class","full_name":"HCL::ArityMismatchError","name":"ArityMismatchError"},{"html_id":"hcl/HCL/FunctionUndefinedError","kind":"class","full_name":"HCL::FunctionUndefinedError","name":"FunctionUndefinedError"}],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"Base error class for function calls within HCL","summary":"<p>Base error class for function calls within HCL</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/ExpressionContext","path":"HCL/ExpressionContext.html","kind":"class","full_name":"HCL::ExpressionContext","name":"ExpressionContext","abstract":false,"superclass":{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/expression_context.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/expression_context.cr#L2"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"DEFAULT_FUNCTIONS","name":"DEFAULT_FUNCTIONS","value":"[Functions::Abs, Functions::Coalesce, Functions::Compact, Functions::Concat, Functions::Format, Functions::HasIndex, Functions::Int, Functions::JSONDecode, Functions::JSONEncode, Functions::Length, Functions::Lower, Functions::Max, Functions::Min, Functions::SetHas, Functions::SetIntersection, Functions::SetSubtract, Functions::SetSymDiff, Functions::SetUnion, Functions::Strlen, Functions::Substr, Functions::Upper]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":null,"summary":null,"class_methods":[{"id":"default_context-class-method","html_id":"default_context-class-method","name":"default_context","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/expression_context.cr","line_number":33,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/expression_context.cr#L33"},"def":{"name":"default_context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx = new(nil)\nDEFAULT_FUNCTIONS.each do |function_class|\n  func = function_class.new\n  ctx.functions[func.name] = func\nend\nctx\n"}}],"constructors":[{"id":"new(parent:ExpressionContext?=nil)-class-method","html_id":"new(parent:ExpressionContext?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":"ExpressionContext | ::Nil"}],"args_string":"(parent : ExpressionContext? = <span class=\"n\">nil</span>)","args_html":"(parent : <a href=\"../HCL/ExpressionContext.html\">ExpressionContext</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/hcl/expression_context.cr","line_number":44,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/expression_context.cr#L44"},"def":{"name":"new","args":[{"name":"parent","doc":null,"default_value":"nil","external_name":"parent","restriction":"ExpressionContext | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(parent)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call_func(name,args)-instance-method","html_id":"call_func(name,args)-instance-method","name":"call_func","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(name, args)","args_html":"(name, args)","location":{"filename":"src/hcl/expression_context.cr","line_number":50,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/expression_context.cr#L50"},"def":{"name":"call_func","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"current_ctx = self\nfunc = nil\nwhile current_ctx\n  if func = functions[name]?\n    break\n  end\n  current_ctx = current_ctx.parent\nend\nif !func\n  raise(FunctionUndefinedError.new(\"Function '#{name}' is not defined in scope of this expression\"))\nend\nif !(func.matches_arity?(args.size))\n  raise(ArityMismatchError.new(\"Expected #{func.arity} arguments but found #{args.size}\"))\nend\nfunc.call(args)\n"}},{"id":"functions:Hash(String,HCL::Function)-instance-method","html_id":"functions:Hash(String,HCL::Function)-instance-method","name":"functions","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, HCL::Function)","args_html":" : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../HCL/Function.html\">HCL::Function</a>)","location":{"filename":"src/hcl/expression_context.cr","line_number":31,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/expression_context.cr#L31"},"def":{"name":"functions","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@functions"}},{"id":"lookup_var(name)-instance-method","html_id":"lookup_var(name)-instance-method","name":"lookup_var","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"args_string":"(name)","args_html":"(name)","location":{"filename":"src/hcl/expression_context.cr","line_number":74,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/expression_context.cr#L74"},"def":{"name":"lookup_var","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"current_ctx = self\nvar = nil\nwhile current_ctx\n  if var = variables[name]?\n    break\n  end\n  current_ctx = current_ctx.parent\nend\nif !var\n  raise(VariableUndefinedError.new(\"Variable '#{name}' is not defined in scope of this expression\"))\nend\nvar\n"}},{"id":"parent:HCL::ExpressionContext?-instance-method","html_id":"parent:HCL::ExpressionContext?-instance-method","name":"parent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::ExpressionContext?","args_html":" : <a href=\"../HCL/ExpressionContext.html\">HCL::ExpressionContext</a>?","location":{"filename":"src/hcl/expression_context.cr","line_number":31,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/expression_context.cr#L31"},"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@parent"}},{"id":"variables:Hash(String,HCL::Any)-instance-method","html_id":"variables:Hash(String,HCL::Any)-instance-method","name":"variables","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, HCL::Any)","args_html":" : <a href=\"../Hash.html\">Hash</a>(<a href=\"../String.html\">String</a>, <a href=\"../HCL/Any.html\">HCL::Any</a>)","location":{"filename":"src/hcl/expression_context.cr","line_number":31,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/expression_context.cr#L31"},"def":{"name":"variables","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@variables"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/ExpressionError","path":"HCL/ExpressionError.html","kind":"class","full_name":"HCL::ExpressionError","name":"ExpressionError","abstract":false,"superclass":{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/exceptions.cr","line_number":19,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/exceptions.cr#L19"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/HCL/CallError","kind":"class","full_name":"HCL::CallError","name":"CallError"},{"html_id":"hcl/HCL/VariableUndefinedError","kind":"class","full_name":"HCL::VariableUndefinedError","name":"VariableUndefinedError"}],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"Base error class for expressions within HCL","summary":"<p>Base error class for expressions within HCL</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Function","path":"HCL/Function.html","kind":"class","full_name":"HCL::Function","name":"Function","abstract":true,"superclass":{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/function.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L2"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ARG_MAX","name":"ARG_MAX","value":"100_u32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/HCL/Functions/Abs","kind":"class","full_name":"HCL::Functions::Abs","name":"Abs"},{"html_id":"hcl/HCL/Functions/Coalesce","kind":"class","full_name":"HCL::Functions::Coalesce","name":"Coalesce"},{"html_id":"hcl/HCL/Functions/Compact","kind":"class","full_name":"HCL::Functions::Compact","name":"Compact"},{"html_id":"hcl/HCL/Functions/Concat","kind":"class","full_name":"HCL::Functions::Concat","name":"Concat"},{"html_id":"hcl/HCL/Functions/Format","kind":"class","full_name":"HCL::Functions::Format","name":"Format"},{"html_id":"hcl/HCL/Functions/HasIndex","kind":"class","full_name":"HCL::Functions::HasIndex","name":"HasIndex"},{"html_id":"hcl/HCL/Functions/Int","kind":"class","full_name":"HCL::Functions::Int","name":"Int"},{"html_id":"hcl/HCL/Functions/JSONDecode","kind":"class","full_name":"HCL::Functions::JSONDecode","name":"JSONDecode"},{"html_id":"hcl/HCL/Functions/JSONEncode","kind":"class","full_name":"HCL::Functions::JSONEncode","name":"JSONEncode"},{"html_id":"hcl/HCL/Functions/Length","kind":"class","full_name":"HCL::Functions::Length","name":"Length"},{"html_id":"hcl/HCL/Functions/Lower","kind":"class","full_name":"HCL::Functions::Lower","name":"Lower"},{"html_id":"hcl/HCL/Functions/Max","kind":"class","full_name":"HCL::Functions::Max","name":"Max"},{"html_id":"hcl/HCL/Functions/Min","kind":"class","full_name":"HCL::Functions::Min","name":"Min"},{"html_id":"hcl/HCL/Functions/SetHas","kind":"class","full_name":"HCL::Functions::SetHas","name":"SetHas"},{"html_id":"hcl/HCL/Functions/SetIntersection","kind":"class","full_name":"HCL::Functions::SetIntersection","name":"SetIntersection"},{"html_id":"hcl/HCL/Functions/SetSubtract","kind":"class","full_name":"HCL::Functions::SetSubtract","name":"SetSubtract"},{"html_id":"hcl/HCL/Functions/SetSymDiff","kind":"class","full_name":"HCL::Functions::SetSymDiff","name":"SetSymDiff"},{"html_id":"hcl/HCL/Functions/SetUnion","kind":"class","full_name":"HCL::Functions::SetUnion","name":"SetUnion"},{"html_id":"hcl/HCL/Functions/Strlen","kind":"class","full_name":"HCL::Functions::Strlen","name":"Strlen"},{"html_id":"hcl/HCL/Functions/Substr","kind":"class","full_name":"HCL::Functions::Substr","name":"Substr"},{"html_id":"hcl/HCL/Functions/Upper","kind":"class","full_name":"HCL::Functions::Upper","name":"Upper"}],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(name:String,arity:UInt32|Range(UInt32,UInt32),varadic=false)-class-method","html_id":"new(name:String,arity:UInt32|Range(UInt32,UInt32),varadic=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"arity","doc":null,"default_value":"","external_name":"arity","restriction":"UInt32 | Range(UInt32, UInt32)"},{"name":"varadic","doc":null,"default_value":"false","external_name":"varadic","restriction":""}],"args_string":"(name : String, arity : UInt32 | Range(UInt32, UInt32), varadic = <span class=\"n\">false</span>)","args_html":"(name : <a href=\"../String.html\">String</a>, arity : UInt32 | Range(UInt32, UInt32), varadic = <span class=\"n\">false</span>)","location":{"filename":"src/hcl/function.cr","line_number":16,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L16"},"def":{"name":"new","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"},{"name":"arity","doc":null,"default_value":"","external_name":"arity","restriction":"UInt32 | Range(UInt32, UInt32)"},{"name":"varadic","doc":null,"default_value":"false","external_name":"varadic","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(name, arity, varadic)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"arity:Range(UInt32,UInt32)|UInt32-instance-method","html_id":"arity:Range(UInt32,UInt32)|UInt32-instance-method","name":"arity","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Range(UInt32, UInt32) | UInt32","args_html":" : Range(UInt32, UInt32) | UInt32","location":{"filename":"src/hcl/function.cr","line_number":13,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L13"},"def":{"name":"arity","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@arity"}},{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":true,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../Array.html\">Array</a>(<a href=\"../HCL/Any.html\">Any</a>)) : <a href=\"../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/function.cr","line_number":37,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L37"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":""}},{"id":"matches_arity?(args_size:Range(UInt32,UInt32)):Bool-instance-method","html_id":"matches_arity?(args_size:Range(UInt32,UInt32)):Bool-instance-method","name":"matches_arity?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args_size","doc":null,"default_value":"","external_name":"args_size","restriction":"Range(UInt32, UInt32)"}],"args_string":"(args_size : Range(UInt32, UInt32)) : Bool","args_html":"(args_size : Range(UInt32, UInt32)) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/hcl/function.cr","line_number":22,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L22"},"def":{"name":"matches_arity?","args":[{"name":"args_size","doc":null,"default_value":"","external_name":"args_size","restriction":"Range(UInt32, UInt32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"args_size.all? do |s|\n  matches_arity?(s)\nend"}},{"id":"matches_arity?(args_size):Bool-instance-method","html_id":"matches_arity?(args_size):Bool-instance-method","name":"matches_arity?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args_size","doc":null,"default_value":"","external_name":"args_size","restriction":""}],"args_string":"(args_size) : Bool","args_html":"(args_size) : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/hcl/function.cr","line_number":26,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L26"},"def":{"name":"matches_arity?","args":[{"name":"args_size","doc":null,"default_value":"","external_name":"args_size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"ar = arity\ncase ar\nwhen Range(UInt32, UInt32)\n  ar.includes?(args_size)\nelse\n  ar == args_size\nend\n"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/hcl/function.cr","line_number":13,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L13"},"def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name"}},{"id":"varadic?:Bool-instance-method","html_id":"varadic?:Bool-instance-method","name":"varadic?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : <a href=\"../Bool.html\">Bool</a>","location":{"filename":"src/hcl/function.cr","line_number":14,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L14"},"def":{"name":"varadic?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@varadic"}}],"macros":[],"types":[{"html_id":"hcl/HCL/Function/ArgumentTypeError","path":"HCL/Function/ArgumentTypeError.html","kind":"class","full_name":"HCL::Function::ArgumentTypeError","name":"ArgumentTypeError","abstract":false,"superclass":{"html_id":"hcl/HCL/Function/FunctionArgumentError","kind":"class","full_name":"HCL::Function::FunctionArgumentError","name":"FunctionArgumentError"},"ancestors":[{"html_id":"hcl/HCL/Function/FunctionArgumentError","kind":"class","full_name":"HCL::Function::FunctionArgumentError","name":"FunctionArgumentError"},{"html_id":"hcl/HCL/Function/FunctionEvalError","kind":"class","full_name":"HCL::Function::FunctionEvalError","name":"FunctionEvalError"},{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/function.cr","line_number":7,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L7"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Function/FunctionArgumentError","path":"HCL/Function/FunctionArgumentError.html","kind":"class","full_name":"HCL::Function::FunctionArgumentError","name":"FunctionArgumentError","abstract":false,"superclass":{"html_id":"hcl/HCL/Function/FunctionEvalError","kind":"class","full_name":"HCL::Function::FunctionEvalError","name":"FunctionEvalError"},"ancestors":[{"html_id":"hcl/HCL/Function/FunctionEvalError","kind":"class","full_name":"HCL::Function::FunctionEvalError","name":"FunctionEvalError"},{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/function.cr","line_number":5,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L5"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/HCL/Function/ArgumentTypeError","kind":"class","full_name":"HCL::Function::ArgumentTypeError","name":"ArgumentTypeError"}],"including_types":[],"namespace":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Function/FunctionEvalError","path":"HCL/Function/FunctionEvalError.html","kind":"class","full_name":"HCL::Function::FunctionEvalError","name":"FunctionEvalError","abstract":false,"superclass":{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/function.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/function.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/HCL/Function/FunctionArgumentError","kind":"class","full_name":"HCL::Function::FunctionArgumentError","name":"FunctionArgumentError"}],"including_types":[],"namespace":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"hcl/HCL/Functions","path":"HCL/Functions.html","kind":"module","full_name":"HCL::Functions","name":"Functions","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/functions/abs.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/abs.cr#L2"},{"filename":"src/hcl/functions/coalesce.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/coalesce.cr#L2"},{"filename":"src/hcl/functions/compact.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/compact.cr#L2"},{"filename":"src/hcl/functions/concat.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/concat.cr#L2"},{"filename":"src/hcl/functions/format.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/format.cr#L2"},{"filename":"src/hcl/functions/has_index.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/has_index.cr#L2"},{"filename":"src/hcl/functions/int.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/int.cr#L2"},{"filename":"src/hcl/functions/json_decode.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/json_decode.cr#L2"},{"filename":"src/hcl/functions/json_encode.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/json_encode.cr#L2"},{"filename":"src/hcl/functions/length.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/length.cr#L2"},{"filename":"src/hcl/functions/lower.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/lower.cr#L2"},{"filename":"src/hcl/functions/max.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/max.cr#L2"},{"filename":"src/hcl/functions/min.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/min.cr#L2"},{"filename":"src/hcl/functions/set_has.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_has.cr#L2"},{"filename":"src/hcl/functions/set_intersection.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_intersection.cr#L2"},{"filename":"src/hcl/functions/set_subtract.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_subtract.cr#L2"},{"filename":"src/hcl/functions/set_sym_diff.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_sym_diff.cr#L2"},{"filename":"src/hcl/functions/set_union.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_union.cr#L2"},{"filename":"src/hcl/functions/strlen.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/strlen.cr#L2"},{"filename":"src/hcl/functions/substr.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/substr.cr#L2"},{"filename":"src/hcl/functions/upper.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/upper.cr#L2"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"hcl/HCL/Functions/Abs","path":"HCL/Functions/Abs.html","kind":"class","full_name":"HCL::Functions::Abs","name":"Abs","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/abs.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/abs.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/abs.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/abs.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/abs.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/abs.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"number_arg = args[0]\nnumber = number_arg.as_i? || number_arg.as_f?\nif !number\n  raise(ArgumentTypeError.new(\"abs(number): Argument type mismatch. Expected a number, but got #{number_arg.raw.class}.\"))\nend\nAny.new(number.abs)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Coalesce","path":"HCL/Functions/Coalesce.html","kind":"class","full_name":"HCL::Functions::Coalesce","name":"Coalesce","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/coalesce.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/coalesce.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/coalesce.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/coalesce.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/coalesce.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/coalesce.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"val = args.find do |arg|\n  !arg.raw.nil?\nend\nval ? val : Any.new(nil)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Compact","path":"HCL/Functions/Compact.html","kind":"class","full_name":"HCL::Functions::Compact","name":"Compact","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/compact.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/compact.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/compact.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/compact.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/compact.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/compact.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"result = args.select do |arg|\n  !arg.raw.nil?\nend\nHCL::Any.new(result)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Concat","path":"HCL/Functions/Concat.html","kind":"class","full_name":"HCL::Functions::Concat","name":"Concat","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/concat.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/concat.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/concat.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/concat.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/concat.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/concat.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"arr = Array(Any).new\nresult = args.map(&.raw).reduce(arr) do |acc, val|\n  if val.is_a?(Array(Any))\n    acc.concat(val)\n  else\n    raise(ArgumentTypeError.new(\"concat(seqs...): Argument type mismatch. Expected an array, but got #{val.class}.\"))\n  end\nend\nAny.new(result)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Format","path":"HCL/Functions/Format.html","kind":"class","full_name":"HCL::Functions::Format","name":"Format","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/format.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/format.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/format.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/format.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/format.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/format.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"if !args[0].as_s?\n  raise(ArgumentTypeError.new(\"format(fmt, args...): Argument type mismatch. Expected a string, but got #{args[0].raw.class}.\"))\nend\nfmt = args.shift.as_s\nAny.new(sprintf(fmt, args.map(&.unwrap)))\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/HasIndex","path":"HCL/Functions/HasIndex.html","kind":"class","full_name":"HCL::Functions::HasIndex","name":"HasIndex","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/has_index.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/has_index.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/has_index.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/has_index.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/has_index.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/has_index.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"coll = args[0]\nidx_or_key = args[1]\nif arr = coll.as_a?\n  if idx = idx_or_key.as_i?\n    HCL::Any.new(!(!arr[idx]?))\n  else\n    raise(ArgumentTypeError.new(\"hasindex(coll, idx): Argument type mismatch. Expected a number, but got #{coll.raw.class}.\"))\n  end\nelse\n  if hsh = coll.as_h?\n    if key = idx_or_key.as_s?\n      HCL::Any.new(!(!hsh[key]?))\n    else\n      raise(ArgumentTypeError.new(\"hasindex(coll, idx): Argument type mismatch. Expected a string, but got #{coll.raw.class}.\"))\n    end\n  else\n    raise(ArgumentTypeError.new(\"hasindex(coll, idx): Argument type mismatch. Expected a collection, but got #{coll.raw.class}.\"))\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Int","path":"HCL/Functions/Int.html","kind":"class","full_name":"HCL::Functions::Int","name":"Int","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/int.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/int.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/int.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/int.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/int.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/int.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"number_arg = args[0]\nnumber = number_arg.as_i? || number_arg.as_f?\nif !number\n  raise(ArgumentTypeError.new(\"int(number): Argument type mismatch. Expected a number, but got #{number_arg.raw.class}.\"))\nend\nif number < 0_i64\n  Any.new(number.ceil)\nelse\n  Any.new(number.floor)\nend\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/JSONDecode","path":"HCL/Functions/JSONDecode.html","kind":"class","full_name":"HCL::Functions::JSONDecode","name":"JSONDecode","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/json_decode.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/json_decode.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/json_decode.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/json_decode.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/json_decode.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/json_decode.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"str = args[0].raw\nif !str.is_a?(String)\n  raise(ArgumentTypeError.new(\"jsonencode(str): Argument type mismatch. Expected a string, but got #{str.class}.\"))\nend\nHCL::Any.from_json(str)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/JSONEncode","path":"HCL/Functions/JSONEncode.html","kind":"class","full_name":"HCL::Functions::JSONEncode","name":"JSONEncode","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/json_encode.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/json_encode.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/json_encode.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/json_encode.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/json_encode.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/json_encode.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"val = args[0]\nAny.new(val.to_json)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Length","path":"HCL/Functions/Length.html","kind":"class","full_name":"HCL::Functions::Length","name":"Length","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/length.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/length.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/length.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/length.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/length.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/length.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"coll_arg = args[0]\ncoll = coll_arg.as_a? || coll_arg.as_h?\nif !coll\n  raise(ArgumentTypeError.new(\"length(coll): Argument type mismatch. Expected a collection, but got #{coll_arg.raw.class}.\"))\nend\nAny.new(coll.size.to_i64)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Lower","path":"HCL/Functions/Lower.html","kind":"class","full_name":"HCL::Functions::Lower","name":"Lower","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/lower.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/lower.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/lower.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/lower.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/lower.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/lower.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"str = args[0].raw\nif !str.is_a?(String)\n  raise(ArgumentTypeError.new(\"lower(str): Argument type mismatch. Expected a string, but got #{str.class}.\"))\nend\nHCL::Any.new(str.downcase)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Max","path":"HCL/Functions/Max.html","kind":"class","full_name":"HCL::Functions::Max","name":"Max","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/max.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/max.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/max.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/max.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/max.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/max.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"if args.empty?\n  raise(FunctionArgumentError.new(\"max(numbers...): Received empty array. Expected at least one element.\"))\nelse\n  max_val = args.map do |arg|\n    (arg.as_i? || arg.as_f?) || (raise(ArgumentTypeError.new(\"max(numbers...): Argument type mismatch. Expected array of only numbers.\")))\n  end.max\n  Any.new(max_val)\nend"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Min","path":"HCL/Functions/Min.html","kind":"class","full_name":"HCL::Functions::Min","name":"Min","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/min.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/min.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/min.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/min.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/min.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/min.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"if args.empty?\n  raise(FunctionArgumentError.new(\"min(numbers...): Received empty array. Expected at least one element.\"))\nelse\n  min_val = args.map do |arg|\n    (arg.as_i? || arg.as_f?) || (raise(ArgumentTypeError.new(\"min(numbers...): Argument type mismatch. Expected array of only numbers.\")))\n  end.min\n  Any.new(min_val)\nend"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/SetHas","path":"HCL/Functions/SetHas.html","kind":"class","full_name":"HCL::Functions::SetHas","name":"SetHas","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/set_has.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_has.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/set_has.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_has.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/set_has.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_has.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"set_arr = args[0].raw\nval = args[1]\nif set_arr.is_a?(Array(Any))\n  set = set_arr.to_set\n  HCL::Any.new(set.includes?(val))\nelse\n  raise(ArgumentTypeError.new(\"sethas(set, val): Argument type mismatch. Expected a set, but got #{set_arr.class}.\"))\nend\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/SetIntersection","path":"HCL/Functions/SetIntersection.html","kind":"class","full_name":"HCL::Functions::SetIntersection","name":"SetIntersection","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/set_intersection.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_intersection.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/set_intersection.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_intersection.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/set_intersection.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_intersection.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"initial_arg = args.first.raw\ninitial_arg = assert_array!(initial_arg)\ninitial = initial_arg.to_set\nresult = args.reduce(initial) do |acc, el|\n  val = el.raw\n  val = assert_array!(val)\n  acc & val.to_set\nend\nAny.new(result.to_a)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/SetSubtract","path":"HCL/Functions/SetSubtract.html","kind":"class","full_name":"HCL::Functions::SetSubtract","name":"SetSubtract","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/set_subtract.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_subtract.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/set_subtract.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_subtract.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/set_subtract.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_subtract.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"arg1 = args.shift.raw\narg1 = assert_array!(arg1)\narg2 = args.shift.raw\narg2 = assert_array!(arg2)\nresult = arg1.to_set - arg2.to_set\nAny.new(result.to_a)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/SetSymDiff","path":"HCL/Functions/SetSymDiff.html","kind":"class","full_name":"HCL::Functions::SetSymDiff","name":"SetSymDiff","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/set_sym_diff.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_sym_diff.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/set_sym_diff.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_sym_diff.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/set_sym_diff.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_sym_diff.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"initial_arg = args.shift.raw\ninitial_arg = assert_array!(initial_arg)\ninitial = initial_arg.to_set\nresult = args.reduce(initial) do |acc, el|\n  val = el.raw\n  val = assert_array!(val)\n  acc ^ val.to_set\nend\nAny.new(result.to_a)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/SetUnion","path":"HCL/Functions/SetUnion.html","kind":"class","full_name":"HCL::Functions::SetUnion","name":"SetUnion","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/set_union.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_union.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/set_union.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_union.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/set_union.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/set_union.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"initial_arg = args.first.raw\ninitial_arg = assert_array!(initial_arg)\ninitial = initial_arg.to_set\nresult = args.reduce(initial) do |acc, el|\n  val = el.raw\n  val = assert_array!(val)\n  acc | val.to_set\nend\nAny.new(result.to_a)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Strlen","path":"HCL/Functions/Strlen.html","kind":"class","full_name":"HCL::Functions::Strlen","name":"Strlen","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/strlen.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/strlen.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/strlen.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/strlen.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/strlen.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/strlen.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"str = args[0].raw\nif !str.is_a?(String)\n  raise(ArgumentTypeError.new(\"strlen(str): Argument type mismatch. Expected a string, but got #{str.class}.\"))\nend\nHCL::Any.new(str.size.to_i64)\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Substr","path":"HCL/Functions/Substr.html","kind":"class","full_name":"HCL::Functions::Substr","name":"Substr","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/substr.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/substr.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/substr.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/substr.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/substr.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/substr.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"str = args[0].raw\noffset = args[1].raw\nlength = args[2].raw\nif !str.is_a?(String)\n  raise(ArgumentTypeError.new(\"substr(str, offset, length): Argument type mismatch. Expected a string, but got #{str.class}.\"))\nend\nif !offset.is_a?(Int64)\n  raise(ArgumentTypeError.new(\"substr(str, offset, length): Argument type mismatch. Expected an integer, but got #{offset.class}.\"))\nend\nif !length.is_a?(Int64)\n  raise(ArgumentTypeError.new(\"substr(str, offset, length): Argument type mismatch. Expected an integer, but got #{length.class}.\"))\nend\nHCL::Any.new(str[offset..(offset + length)])\n"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Functions/Upper","path":"HCL/Functions/Upper.html","kind":"class","full_name":"HCL::Functions::Upper","name":"Upper","abstract":false,"superclass":{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},"ancestors":[{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/functions/upper.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/upper.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Functions","kind":"module","full_name":"HCL::Functions","name":"Functions"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/functions/upper.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/upper.cr#L4"},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"call(args:Array(Any)):Any-instance-method","html_id":"call(args:Array(Any)):Any-instance-method","name":"call","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"args_string":"(args : Array(Any)) : Any","args_html":"(args : <a href=\"../../Array.html\">Array</a>(<a href=\"../../HCL/Any.html\">Any</a>)) : <a href=\"../../HCL/Any.html\">Any</a>","location":{"filename":"src/hcl/functions/upper.cr","line_number":12,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/functions/upper.cr#L12"},"def":{"name":"call","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"Array(Any)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Any","visibility":"Public","body":"str = args[0].raw\nif !str.is_a?(String)\n  raise(ArgumentTypeError.new(\"upper(str): Argument type mismatch. Expected a string, but got #{str.class}.\"))\nend\nHCL::Any.new(str.upcase)\n"}}],"macros":[],"types":[]}]},{"html_id":"hcl/HCL/FunctionUndefinedError","path":"HCL/FunctionUndefinedError.html","kind":"class","full_name":"HCL::FunctionUndefinedError","name":"FunctionUndefinedError","abstract":false,"superclass":{"html_id":"hcl/HCL/CallError","kind":"class","full_name":"HCL::CallError","name":"CallError"},"ancestors":[{"html_id":"hcl/HCL/CallError","kind":"class","full_name":"HCL::CallError","name":"CallError"},{"html_id":"hcl/HCL/ExpressionError","kind":"class","full_name":"HCL::ExpressionError","name":"ExpressionError"},{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/exceptions.cr","line_number":32,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/exceptions.cr#L32"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"Raised when an undefined function is called within HCL","summary":"<p>Raised when an undefined function is called within HCL</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Label","path":"HCL/Label.html","kind":"annotation","full_name":"HCL::Label","name":"Label","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/serializable.cr","line_number":22,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L22"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"Denotes a label within an HCL block\nCan be applied to getters, setters, `property`, and instance variables.\n\nThis attribute is order-dependent unless an `index` option is specified.\n\nSee `HCL::Serializable` for more info.","summary":"<p>Denotes a label within an HCL block Can be applied to getters, setters, <code>property</code>, and instance variables.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/ParseException","path":"HCL/ParseException.html","kind":"class","full_name":"HCL::ParseException","name":"ParseException","abstract":false,"superclass":{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/exceptions.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/exceptions.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"Base error class for HCL parsing exceptions","summary":"<p>Base error class for HCL parsing exceptions</p>","class_methods":[],"constructors":[{"id":"new(message,source:String?=nil,token:Pegmatite::Token?=nil)-class-method","html_id":"new(message,source:String?=nil,token:Pegmatite::Token?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"source","doc":null,"default_value":"nil","external_name":"source","restriction":"String | ::Nil"},{"name":"token","doc":null,"default_value":"nil","external_name":"token","restriction":"Pegmatite::Token | ::Nil"}],"args_string":"(message, source : String? = <span class=\"n\">nil</span>, token : Pegmatite::Token? = <span class=\"n\">nil</span>)","args_html":"(message, source : <a href=\"../String.html\">String</a>? = <span class=\"n\">nil</span>, token : Pegmatite::Token? = <span class=\"n\">nil</span>)","location":{"filename":"src/hcl/exceptions.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/exceptions.cr#L4"},"def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":""},{"name":"source","doc":null,"default_value":"nil","external_name":"source","restriction":"String | ::Nil"},{"name":"token","doc":null,"default_value":"nil","external_name":"token","restriction":"Pegmatite::Token | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message, source, token)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Parser","path":"HCL/Parser.html","kind":"class","full_name":"HCL::Parser","name":"Parser","abstract":false,"superclass":{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/parser.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/parser.cr#L2"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":null,"summary":null,"class_methods":[{"id":"parse!(*args,**kwargs)-class-method","html_id":"parse!(*args,**kwargs)-class-method","name":"parse!","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **kwargs)","args_html":"(*args, **kwargs)","location":{"filename":"src/hcl/parser.cr","line_number":10,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/parser.cr#L10"},"def":{"name":"parse!","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(*args, **kwargs)).parse!"}}],"constructors":[{"id":"new(source:String|IO,offset=0,io:IO?=nil)-class-method","html_id":"new(source:String|IO,offset=0,io:IO?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String | IO"},{"name":"offset","doc":null,"default_value":"0","external_name":"offset","restriction":""},{"name":"io","doc":null,"default_value":"nil","external_name":"io","restriction":"IO | ::Nil"}],"args_string":"(source : String | IO, offset = <span class=\"n\">0</span>, io : IO? = <span class=\"n\">nil</span>)","args_html":"(source : <a href=\"../String.html\">String</a> | IO, offset = <span class=\"n\">0</span>, io : IO? = <span class=\"n\">nil</span>)","location":{"filename":"src/hcl/parser.cr","line_number":14,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/parser.cr#L14"},"def":{"name":"new","args":[{"name":"source","doc":null,"default_value":"","external_name":"source","restriction":"String | IO"},{"name":"offset","doc":null,"default_value":"0","external_name":"offset","restriction":""},{"name":"io","doc":null,"default_value":"nil","external_name":"io","restriction":"IO | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(source, offset, io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"document:HCL::AST::Document?-instance-method","html_id":"document:HCL::AST::Document?-instance-method","name":"document","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::AST::Document?","args_html":" : <a href=\"../HCL/AST/Document.html\">HCL::AST::Document</a>?","location":{"filename":"src/hcl/parser.cr","line_number":8,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/parser.cr#L8"},"def":{"name":"document","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@document"}},{"id":"parse!-instance-method","html_id":"parse!-instance-method","name":"parse!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/parser.cr","line_number":20,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/parser.cr#L20"},"def":{"name":"parse!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@document || (@document = begin\n  peg_tokens = Pegmatite.tokenize(HCL::Grammar, @source, @source_offset, @parse_trace_io)\n  peg_iter = Pegmatite::TokenIterator.new(peg_tokens)\n  build_document(peg_iter, @source)\nrescue e : Pegmatite::Pattern::MatchError\n  raise(ParseException.new(e.message))\nend)"}},{"id":"source:String-instance-method","html_id":"source:String-instance-method","name":"source","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : <a href=\"../String.html\">String</a>","location":{"filename":"src/hcl/parser.cr","line_number":8,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/parser.cr#L8"},"def":{"name":"source","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@source"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Serializable","path":"HCL/Serializable.html","kind":"module","full_name":"HCL::Serializable","name":"Serializable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/serializable.cr","line_number":166,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L166"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"The `HCL::Serializable` module automatically generates methods for HCL serialization and deserialization when included.\n\n### Example\n\n```\nrequire \"hcl\"\n\nclass Location\n  include HCL::Serializable\n\n  @[HCL::Attribute(key: \"lat\")]\n  property latitude : Float64\n\n  @[HCL::Attribute(key: \"lng\")]\n  property longitude : Float64\nend\n\nclass House\n  include HCL::Serializable\n\n  @[HCL::Attribute]\n  property address : String\n\n  @[HCL::Block]\n  property location : Location?\nend\n\nhcl_house = <<-HCL\n  address = \"Crystal Road 1234\"\n  location {\n    lat = 12.3\n    lng = 34.5\n  }\n\nHCL\nhouse = House.from_hcl(hcl_house)\nhouse.address  # => \"Crystal Road 1234\"\nhouse.location # => #<Location:0x10cd93d80 @latitude=12.3, @longitude=34.5>\nhouse.to_hcl  # => \"\n  address = \\\"Crystal Road 1234\\\"\n\n  location {\n    lat = 12.3\n    lng = 34.5\n  }\n\"\n```\n\n### Usage\n\nIncluding `HCL::Serializable` will create `#to_hcl` and `self.from_hcl` methods on the current class,\nand a constructor which takes an `HCL::AST::Body` and an `HCL::ExpressionContext`.\nBy default, these methods serialize into an HCL document containing the value of every tagged instance\nvariable, the keys being the instance variable name. Most primitives and collections supported as\ninstance variable values (string, integer, array, hash, etc.), along with objects which define\n`#to_hcl(builder : HCL::Builder)`.\n\nUnion types are supported for attributes and blocks, including unions with `Nil`.\nIf multiple types in a union parse correctly, it is undefined which one will be chosen.\n\nTo denote an individual instance variable to be parsed and serialized, the annotation `HCL::Attribute`\nmust be placed on the instance variable. Annotating property, getter and setter macros is also allowed.\n```\nrequire \"hcl\"\n\nclass A\n  include HCL::Serializable\n\n  @[HCL::Attribute(key: \"my_key\", emit_null: true)]\n  getter a : Int32?\nend\n```\n\n`HCL::Attribute` properties:\n* **key**: the value of the key in the HCL document or block (by default the name of the instance variable)\n* **emit_null**: if `true`, emits a `null` value for nilable property (by default nulls are not emitted)\n\nDeserialization also respects default values of variables:\n```\nrequire \"hcl\"\n\nstruct A\n  include HCL::Serializable\n\n  @[HCL::Attribute]\n  @a : Int64\n\n  @[HCL::Attribute]\n  @b : Float64 = 1.0\nend\n\nA.from_hcl(\"a = 1\\n\") # => A(@a=1, @b=1.0)\n```\n\n### Extensions: `HCL::Serializable::Strict` and `HCL::Serializable::Unmapped`.\n\nIf the `HCL::Serializable::Strict` module is included, unknown properties in the HCL\ndocument will raise a parse exception. By default the unknown properties\nare silently ignored.\nIf the `HCL::Serializable::Unmapped` module is included, unknown attributes and blocks in the HCL\ndocument will be stored in respective `Hash(String, HCL::AST::Node)`. For blocks,\nany unmapped labels will be stored in a `Hash(Int32, HCL::AST::Node)`, where\nthe key is the label index. On serialization, any keys inside\n`hcl_unmapped_attributes`, `hcl_unmapped_blocks`, and `hcl_unmapped_labels`\nwill be serialized and appended to the current HCL block or document.\nThe deserialied values are AST nodes in order to allow for later evaluation,\nperhaps with a different expression context than the original document.\n```\nrequire \"hcl\"\n\nstruct A\n  include HCL::Serializable\n  include HCL::Serializable::Unmapped\n\n  @[HCL::Attribute]\n  @a : Int32\nend\n\na = A.from_hcl(\"a = 1\\nb = 2\\n\") # => A(@hcl_unmapped_attributes={\"b\" => HCL::AST::Number.new(2_i64)}, @a=1)\na.to_hcl                         # => \"a = 1\\nb = 2\\n\"\n```\n\n\n### Class annotation `HCL::Serializable::Options`\n\nsupported properties:\n* **emit_nulls**: if `true`, emits a `null` value for all nilable properties (by default nulls are not emitted)\n\n```\nrequire \"hcl\"\n\n@[HCL::Serializable::Options(emit_nulls: true)]\nclass A\n  include HCL::Serializable\n\n  @[HCL::Serializable]\n  @a : Int32?\nend\n```\n\nThis module is derived heavily from [JSON::Serializable](https://github.com/crystal-lang/crystal/blob/41bd18fbea4aec50aad33aa3beb7a0bf30544186/src/json/serialization.cr)","summary":"<p>The <code><a href=\"../HCL/Serializable.html\">HCL::Serializable</a></code> module automatically generates methods for HCL serialization and deserialization when included.</p>","class_methods":[],"constructors":[{"id":"new(*,__node_from_hcl:HCL::AST::Body,__ctx_from_hcl:HCL::ExpressionContext)-class-method","html_id":"new(*,__node_from_hcl:HCL::AST::Body,__ctx_from_hcl:HCL::ExpressionContext)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"__node_from_hcl","doc":null,"default_value":"","external_name":"__node_from_hcl","restriction":"::HCL::AST::Body"},{"name":"__ctx_from_hcl","doc":null,"default_value":"","external_name":"__ctx_from_hcl","restriction":"::HCL::ExpressionContext"}],"args_string":"(*, __node_from_hcl : HCL::AST::Body, __ctx_from_hcl : HCL::ExpressionContext)","args_html":"(*, __node_from_hcl : <a href=\"../HCL/AST/Body.html\">HCL::AST::Body</a>, __ctx_from_hcl : <a href=\"../HCL/ExpressionContext.html\">HCL::ExpressionContext</a>)","location":{"filename":"src/hcl/serializable.cr","line_number":195,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L195"},"def":{"name":"new","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"__node_from_hcl","doc":null,"default_value":"","external_name":"__node_from_hcl","restriction":"::HCL::AST::Body"},{"name":"__ctx_from_hcl","doc":null,"default_value":"","external_name":"__ctx_from_hcl","restriction":"::HCL::ExpressionContext"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(__node_from_hcl: __node_from_hcl, __ctx_from_hcl: __ctx_from_hcl)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_hcl(io:IO,node:AST::Node?=AST::Document.new)-instance-method","html_id":"to_hcl(io:IO,node:AST::Node?=AST::Document.new)-instance-method","name":"to_hcl","doc":"Serializes HCL and writes it to the given IO as a string. Root node for\nbuilding can be specified by `node` argument. Defaults to `AST::Document`.","summary":"<p>Serializes HCL and writes it to the given IO as a string.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"node","doc":null,"default_value":"AST::Document.new","external_name":"node","restriction":"AST::Node | ::Nil"}],"args_string":"(io : IO, node : AST::Node? = <span class=\"t\">AST</span><span class=\"t\">::</span><span class=\"t\">Document</span>.<span class=\"k\">new</span>)","args_html":"(io : IO, node : <a href=\"../HCL/AST/Node.html\">AST::Node</a>? = <span class=\"t\">AST</span><span class=\"t\">::</span><span class=\"t\">Document</span>.<span class=\"k\">new</span>)","location":{"filename":"src/hcl/serializable.cr","line_number":448,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L448"},"def":{"name":"to_hcl","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"node","doc":null,"default_value":"AST::Document.new","external_name":"node","restriction":"AST::Node | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(to_hcl(HCL::Builder.new(node))).to_s(io)"}},{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":"Appends passed in `HCL::Builder` with the HCL structure of the class/struct.\n\nReturns the passed in `HCL::Builder`","summary":"<p>Appends passed in <code><a href=\"../HCL/Builder.html\">HCL::Builder</a></code> with the HCL structure of the class/struct.</p>","abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"../HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/serializable.cr","line_number":455,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L455"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if true %}\n        {% options = @type.annotation(::HCL::Serializable::Options) %}\n        {% emit_nulls = options && options[:emit_nulls] %}\n        {% attributes = {} of Nil => Nil %}\n        {% blocks = {} of Nil => Nil %}\n        {% labels = {} of Nil => Nil %}\n        {% current_label_idx = 0 %}\n        {% for ivar in @type.instance_vars %}\n          {% if ann = ivar.annotation(::HCL::Attribute) %}\n            {% attributes[ivar.id] = {key: ((ann && ann[:key]) || ivar).id.stringify, emit_null: (ann && (ann[:emit_null] != nil) ? ann[:emit_null] : emit_nulls)} %}\n          {% else %}{% if ann = ivar.annotation(::HCL::Block) %}\n            {% blocks[ivar.id] = {key: ((ann && ann[:key]) || ivar).id.stringify} %}\n          {% else %}{% if ann = ivar.annotation(::HCL::Label) %}\n            {% labels[ivar.id] = {type: ivar.type, index: ann[:index] || current_label_idx} %}\n            {% current_label_idx = ann[:index] ? (ann[:index] + 1) : (current_label_idx + 1) %}\n          {% end %}{% end %}{% end %}\n        {% end %}\n\n        {% for name, value in attributes %}\n          %var{name} = @{{ name }}\n\n          if !%var{name}.nil? || {{ value[:emit_null] }}\n            builder.attribute({{ value[:key] }}) { %var{name} }\n          end\n        {% end %}\n\n        {% for name, value in blocks %}\n          %var{name} = @{{ name }}\n\n          if %var{name}.is_a?(Array)\n            %var{name}.each do |block|\n              builder.block({{ value[:key] }}) do |block_builder|\n                block.to_hcl(block_builder)\n              end\n            end\n          elsif !%var{name}.nil?\n            builder.block({{ value[:key] }}) do |block_builder|\n              %var{name}.to_hcl(block_builder)\n            end\n          end\n        {% end %}\n\n        {% sorted_labels = labels.to_a.sort_by do |item|\n  label = item[1]\n  label[:index]\nend %}\n\n        {% for item in sorted_labels %}\n          {% name = item[0] %}\n          %var{name} = @{{ name }}\n          builder.label(%var{name}) if !%var{name}.nil?\n        {% end %}\n      {% end %}\non_to_hcl(builder)\nbuilder\n"}},{"id":"to_hcl-instance-method","html_id":"to_hcl-instance-method","name":"to_hcl","doc":"Returns HCL serialization as a String","summary":"<p>Returns HCL serialization as a String</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/serializable.cr","line_number":532,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L532"},"def":{"name":"to_hcl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"String.build do |builder|\n  to_hcl(builder)\nend"}}],"macros":[],"types":[{"html_id":"hcl/HCL/Serializable/Options","path":"HCL/Serializable/Options.html","kind":"annotation","full_name":"HCL::Serializable::Options","name":"Options","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/serializable.cr","line_number":167,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L167"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Serializable","kind":"module","full_name":"HCL::Serializable","name":"Serializable"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Serializable/Strict","path":"HCL/Serializable/Strict.html","kind":"module","full_name":"HCL::Serializable::Strict","name":"Strict","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/serializable.cr","line_number":556,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L556"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Serializable","kind":"module","full_name":"HCL::Serializable","name":"Serializable"},"doc":"Modifies behavior of `HCL::Serializable` such that unknown properties in\nthe HCLdocument will raise a parse exception. By default the unknown properties\nare silently ignored.","summary":"<p>Modifies behavior of <code><a href=\"../../HCL/Serializable.html\">HCL::Serializable</a></code> such that unknown properties in the HCLdocument will raise a parse exception.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Serializable/Unmapped","path":"HCL/Serializable/Unmapped.html","kind":"module","full_name":"HCL::Serializable::Unmapped","name":"Unmapped","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/serializable.cr","line_number":597,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L597"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Serializable","kind":"module","full_name":"HCL::Serializable","name":"Serializable"},"doc":"Modifies behavior of `HCL::Serializable` such that unknown attributes and\nblocks in the HCL document will be stored in respective\n`Hash(String, HCL::AST::Node)`. For classes/structs representing blocks,\nany unmapped labels will be stored in a `Hash(Int32, HCL::AST::Node)`, where\nthe key is the label index. On serialization, any keys inside\n`hcl_unmapped_attributes`, `hcl_unmapped_blocks`, and `hcl_unmapped_labels`\nwill be serialized and appended to the current HCL block or document.\nThe deserialied values are AST nodes in order to allow for later evaluation,\nperhaps with a different expression context than the original document.","summary":"<p>Modifies behavior of <code><a href=\"../../HCL/Serializable.html\">HCL::Serializable</a></code> such that unknown attributes and blocks in the HCL document will be stored in respective <code><a href=\"../../Hash.html\">Hash</a>(<a href=\"../../String.html\">String</a>, <a href=\"../../HCL/AST/Node.html\">HCL::AST::Node</a>)</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"hcl_unmapped_attributes-instance-method","html_id":"hcl_unmapped_attributes-instance-method","name":"hcl_unmapped_attributes","doc":"Unmapped attribute nodes. Key is the name of the attribute. Value is the\nAST node","summary":"<p>Unmapped attribute nodes.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/serializable.cr","line_number":600,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L600"},"def":{"name":"hcl_unmapped_attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hcl_unmapped_attributes"}},{"id":"hcl_unmapped_attributes=(hcl_unmapped_attributes)-instance-method","html_id":"hcl_unmapped_attributes=(hcl_unmapped_attributes)-instance-method","name":"hcl_unmapped_attributes=","doc":"Unmapped attribute nodes. Key is the name of the attribute. Value is the\nAST node","summary":"<p>Unmapped attribute nodes.</p>","abstract":false,"args":[{"name":"hcl_unmapped_attributes","doc":null,"default_value":"","external_name":"hcl_unmapped_attributes","restriction":""}],"args_string":"(hcl_unmapped_attributes)","args_html":"(hcl_unmapped_attributes)","location":{"filename":"src/hcl/serializable.cr","line_number":600,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L600"},"def":{"name":"hcl_unmapped_attributes=","args":[{"name":"hcl_unmapped_attributes","doc":null,"default_value":"","external_name":"hcl_unmapped_attributes","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hcl_unmapped_attributes = hcl_unmapped_attributes"}},{"id":"hcl_unmapped_blocks-instance-method","html_id":"hcl_unmapped_blocks-instance-method","name":"hcl_unmapped_blocks","doc":"Unmapped block node groups. Key is the ID/type of the block. Value is the\nAST node.","summary":"<p>Unmapped block node groups.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/serializable.cr","line_number":604,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L604"},"def":{"name":"hcl_unmapped_blocks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hcl_unmapped_blocks"}},{"id":"hcl_unmapped_blocks=(hcl_unmapped_blocks)-instance-method","html_id":"hcl_unmapped_blocks=(hcl_unmapped_blocks)-instance-method","name":"hcl_unmapped_blocks=","doc":"Unmapped block node groups. Key is the ID/type of the block. Value is the\nAST node.","summary":"<p>Unmapped block node groups.</p>","abstract":false,"args":[{"name":"hcl_unmapped_blocks","doc":null,"default_value":"","external_name":"hcl_unmapped_blocks","restriction":""}],"args_string":"(hcl_unmapped_blocks)","args_html":"(hcl_unmapped_blocks)","location":{"filename":"src/hcl/serializable.cr","line_number":604,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L604"},"def":{"name":"hcl_unmapped_blocks=","args":[{"name":"hcl_unmapped_blocks","doc":null,"default_value":"","external_name":"hcl_unmapped_blocks","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hcl_unmapped_blocks = hcl_unmapped_blocks"}},{"id":"hcl_unmapped_labels-instance-method","html_id":"hcl_unmapped_labels-instance-method","name":"hcl_unmapped_labels","doc":"Unmapped label nodes. Key is the index of the label. Value is the AST\nnode. This will only be populated for classes/structs represented as\nblocks in another class/struct implementing `HCL::Serializable`.","summary":"<p>Unmapped label nodes.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/hcl/serializable.cr","line_number":609,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L609"},"def":{"name":"hcl_unmapped_labels","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hcl_unmapped_labels"}},{"id":"hcl_unmapped_labels=(hcl_unmapped_labels)-instance-method","html_id":"hcl_unmapped_labels=(hcl_unmapped_labels)-instance-method","name":"hcl_unmapped_labels=","doc":"Unmapped label nodes. Key is the index of the label. Value is the AST\nnode. This will only be populated for classes/structs represented as\nblocks in another class/struct implementing `HCL::Serializable`.","summary":"<p>Unmapped label nodes.</p>","abstract":false,"args":[{"name":"hcl_unmapped_labels","doc":null,"default_value":"","external_name":"hcl_unmapped_labels","restriction":""}],"args_string":"(hcl_unmapped_labels)","args_html":"(hcl_unmapped_labels)","location":{"filename":"src/hcl/serializable.cr","line_number":609,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/serializable.cr#L609"},"def":{"name":"hcl_unmapped_labels=","args":[{"name":"hcl_unmapped_labels","doc":null,"default_value":"","external_name":"hcl_unmapped_labels","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@hcl_unmapped_labels = hcl_unmapped_labels"}}],"macros":[],"types":[]}]},{"html_id":"hcl/HCL/VariableUndefinedError","path":"HCL/VariableUndefinedError.html","kind":"class","full_name":"HCL::VariableUndefinedError","name":"VariableUndefinedError","abstract":false,"superclass":{"html_id":"hcl/HCL/ExpressionError","kind":"class","full_name":"HCL::ExpressionError","name":"ExpressionError"},"ancestors":[{"html_id":"hcl/HCL/ExpressionError","kind":"class","full_name":"HCL::ExpressionError","name":"ExpressionError"},{"html_id":"hcl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/exceptions.cr","line_number":25,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/exceptions.cr#L25"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":"Raised when an undefined variable is referenced within HCL","summary":"<p>Raised when an undefined variable is referenced within HCL</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"hcl/HCL/Visitor","path":"HCL/Visitor.html","kind":"class","full_name":"HCL::Visitor","name":"Visitor","abstract":true,"superclass":{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/visitor.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitor.cr#L2"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/HCL/Visitors/Evaluator","kind":"class","full_name":"HCL::Visitors::Evaluator","name":"Evaluator"},{"html_id":"hcl/HCL/Visitors/ToSVisitor","kind":"class","full_name":"HCL::Visitors::ToSVisitor","name":"ToSVisitor"}],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"visit(node:T)forallT-instance-method","html_id":"visit(node:T)forallT-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"T"}],"args_string":"(node : T) forall T","args_html":"(node : T) forall T","location":{"filename":"src/hcl/visitor.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitor.cr#L3"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Visitors","path":"HCL/Visitors.html","kind":"module","full_name":"HCL::Visitors","name":"Visitors","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/visitors/evaluator.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L2"},{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":2,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L2"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL","kind":"module","full_name":"HCL","name":"HCL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"hcl/HCL/Visitors/Evaluator","path":"HCL/Visitors/Evaluator.html","kind":"class","full_name":"HCL::Visitors::Evaluator","name":"Evaluator","abstract":false,"superclass":{"html_id":"hcl/HCL/Visitor","kind":"class","full_name":"HCL::Visitor","name":"Visitor"},"ancestors":[{"html_id":"hcl/HCL/Visitor","kind":"class","full_name":"HCL::Visitor","name":"Visitor"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/visitors/evaluator.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Visitors","kind":"module","full_name":"HCL::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(ctx:ExpressionContext)-class-method","html_id":"new(ctx:ExpressionContext)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"ExpressionContext"}],"args_string":"(ctx : ExpressionContext)","args_html":"(ctx : <a href=\"../../HCL/ExpressionContext.html\">ExpressionContext</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L6"},"def":{"name":"new","args":[{"name":"ctx","doc":null,"default_value":"","external_name":"ctx","restriction":"ExpressionContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(ctx)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"ctx:HCL::ExpressionContext-instance-method","html_id":"ctx:HCL::ExpressionContext-instance-method","name":"ctx","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HCL::ExpressionContext","args_html":" : <a href=\"../../HCL/ExpressionContext.html\">HCL::ExpressionContext</a>","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":4,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L4"},"def":{"name":"ctx","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ctx"}},{"id":"visit(node:AST::TemplateInterpolation)-instance-method","html_id":"visit(node:AST::TemplateInterpolation)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateInterpolation"}],"args_string":"(node : AST::TemplateInterpolation)","args_html":"(node : <a href=\"../../HCL/AST/TemplateInterpolation.html\">AST::TemplateInterpolation</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":353,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L353"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateInterpolation"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.expression.accept(self)"}},{"id":"visit(node:AST::TemplateIf)-instance-method","html_id":"visit(node:AST::TemplateIf)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateIf"}],"args_string":"(node : AST::TemplateIf)","args_html":"(node : <a href=\"../../HCL/AST/TemplateIf.html\">AST::TemplateIf</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":338,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L338"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateIf"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"predicate_value = (node.predicate.accept(self)).raw\nif truthy?(predicate_value)\n  node.true_tpl.accept(self)\nelse\n  if false_tpl = node.false_tpl\n    false_tpl.accept(self)\n  else\n    Any.new(\"\")\n  end\nend\n"}},{"id":"visit(node:AST::TemplateForExpr)-instance-method","html_id":"visit(node:AST::TemplateForExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateForExpr"}],"args_string":"(node : AST::TemplateForExpr)","args_html":"(node : <a href=\"../../HCL/AST/TemplateForExpr.html\">AST::TemplateForExpr</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":304,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L304"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateForExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"coll_expr = node.coll_expr\ncoll_val = coll_expr.accept(self)\ncoll = coll_val.as_h? || coll_val.as_a\nindex = 0\nbuilder = String.build do |str|\n  coll.each do |item|\n    if item.is_a?(Tuple)\n      key, value = item\n    else\n      key = index.to_i64\n      value = item\n    end\n    iter_ctx = ExpressionContext.new(ctx)\n    if key_name = node.key_name\n      iter_ctx.variables[key_name] = Any.new(key)\n    end\n    iter_ctx.variables[node.value_name] = value\n    tpl_eval_visitor = Visitors::Evaluator.new(iter_ctx)\n    tpl_expr_val = node.tpl_expr.accept(tpl_eval_visitor)\n    str << tpl_expr_val.to_s\n  end\nend\nAny.new(builder.to_s)\n"}},{"id":"visit(node:AST::Template)-instance-method","html_id":"visit(node:AST::Template)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Template"}],"args_string":"(node : AST::Template)","args_html":"(node : <a href=\"../../HCL/AST/Template.html\">AST::Template</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":288,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L288"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Template"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"children = node.children\nif children.size == 1\n  children.first.accept(self)\nelse\n  builder = String.build do |str|\n    children.each do |exp|\n      str << (exp.accept(self)).to_s\n    end\n  end\n  Any.new(builder.to_s)\nend\n"}},{"id":"visit(node:AST::OpExpr)-instance-method","html_id":"visit(node:AST::OpExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::OpExpr"}],"args_string":"(node : AST::OpExpr)","args_html":"(node : <a href=\"../../HCL/AST/OpExpr.html\">AST::OpExpr</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":213,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L213"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::OpExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"left_operand = node.left_operand\nleft_op_val = (left_operand.accept(self)).raw\nright_operand = node.right_operand\nop = node.operator\nif right_operand.nil?\n  if left_op_val.responds_to?(:[])\n    raise(\"Parser bug: Cannot perform unary operation on array\")\n  end\n  result = case op\n  when AST::OpExpr::NOT\n    !left_op_val\n  when AST::OpExpr::SUBTRACTION\n    if left_op_val.nil?\n      raise(\"Parser bug: Cannot perform numeric inversion on nil\")\n    end\n    if left_op_val.is_a?(Bool)\n      raise(\"Parser bug: Cannot perform numeric inversion on boolean\")\n    end\n    -left_op_val\n  else\n    raise(\"BUG: unsupported operator: #{op}\")\n  end\n  Any.new(result)\nelse\n  right_op_val = (right_operand.accept(self)).raw\n  result = case op\n  when AST::OpExpr::ADDITION\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    left_op_val + right_op_val\n  when AST::OpExpr::SUBTRACTION\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    left_op_val - right_op_val\n  when AST::OpExpr::MULTIPLY\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    left_op_val * right_op_val\n  when AST::OpExpr::DIVIDE\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    left_op_val / right_op_val\n  when AST::OpExpr::MOD\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    if left_op_val.is_a?(Float64) && right_op_val.is_a?(Float64)\n      left_op_val % right_op_val\n    else\n      if left_op_val.is_a?(Int64) && right_op_val.is_a?(Int64)\n        left_op_val % right_op_val\n      else\n        raise(\"Parser bug: Cannot perform modulo operation on different types\")\n      end\n    end\n  when AST::OpExpr::EQ\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    left_op_val == right_op_val\n  when AST::OpExpr::NEQ\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    left_op_val != right_op_val\n  when AST::OpExpr::LT\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    left_op_val < right_op_val\n  when AST::OpExpr::GT\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    left_op_val > right_op_val\n  when AST::OpExpr::LTE\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    left_op_val <= right_op_val\n  when AST::OpExpr::GTE\n    left_op_val, right_op_val = assert_op_types!(op, left_op_val, right_op_val)\n    left_op_val >= right_op_val\n  when AST::OpExpr::AND\n    left_op_val && right_op_val\n  when AST::OpExpr::OR\n    left_op_val || right_op_val\n  else\n    raise(\"BUG: unsupported operator: #{op}\")\n  end\n  Any.new(result)\nend\n"}},{"id":"visit(node:AST::Number)-instance-method","html_id":"visit(node:AST::Number)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Number"}],"args_string":"(node : AST::Number)","args_html":"(node : <a href=\"../../HCL/AST/Number.html\">AST::Number</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":209,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L209"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Any.new(node.value)"}},{"id":"visit(node:AST::Map)-instance-method","html_id":"visit(node:AST::Map)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Map"}],"args_string":"(node : AST::Map)","args_html":"(node : <a href=\"../../HCL/AST/Map.html\">AST::Map</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":199,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L199"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Map"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dict = {} of String => Any\nnode.attributes.each do |key, value|\n  dict[key] = value.accept(self)\nend\nAny.new(dict)\n"}},{"id":"visit(node:AST::Literal)-instance-method","html_id":"visit(node:AST::Literal)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Literal"}],"args_string":"(node : AST::Literal)","args_html":"(node : <a href=\"../../HCL/AST/Literal.html\">AST::Literal</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":195,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L195"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Literal"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Any.new(node.value)"}},{"id":"visit(node:AST::List)-instance-method","html_id":"visit(node:AST::List)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::List"}],"args_string":"(node : AST::List)","args_html":"(node : <a href=\"../../HCL/AST/List.html\">AST::List</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":187,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L187"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::List"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = node.children.map do |item|\n  (item.accept(self)).as(Any)\nend\nAny.new(result)\n"}},{"id":"visit(node:AST::Identifier)-instance-method","html_id":"visit(node:AST::Identifier)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Identifier"}],"args_string":"(node : AST::Identifier)","args_html":"(node : <a href=\"../../HCL/AST/Identifier.html\">AST::Identifier</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":183,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L183"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Identifier"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ctx.lookup_var(node.name)"}},{"id":"visit(node:AST::Heredoc)-instance-method","html_id":"visit(node:AST::Heredoc)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Heredoc"}],"args_string":"(node : AST::Heredoc)","args_html":"(node : <a href=\"../../HCL/AST/Heredoc.html\">AST::Heredoc</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":179,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L179"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Heredoc"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.content.accept(self)"}},{"id":"visit(node:AST::ForExpr)-instance-method","html_id":"visit(node:AST::ForExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::ForExpr"}],"args_string":"(node : AST::ForExpr)","args_html":"(node : <a href=\"../../HCL/AST/ForExpr.html\">AST::ForExpr</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":106,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L106"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::ForExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"coll_expr = node.coll_expr\ncoll_val = coll_expr.accept(self)\nvalue_expr = node.value_expr\nif node.is_map_type?\n  coll = coll_val.as_h? || coll_val.as_a\n  key_expr = node.key_expr.not_nil!\n  index = 0\n  mapped = coll.reduce(Hash(String, Any).new) do |acc, item|\n    if item.is_a?(Tuple)\n      key, value = item\n    else\n      key = index.to_i64\n      value = item\n    end\n    iter_ctx = ExpressionContext.new(ctx)\n    if key_name = node.key_name\n      iter_ctx.variables[key_name] = Any.new(key)\n    end\n    iter_ctx.variables[node.value_name] = value\n    iter_eval_visitor = Visitors::Evaluator.new(iter_ctx)\n    if cond = node.cond_expr\n      if (cond.accept(iter_eval_visitor)).as_bool?\n        key_val = (key_expr.accept(iter_eval_visitor)).to_s\n        acc[key_val] = value_expr.accept(iter_eval_visitor)\n      end\n    else\n      key_val = (key_expr.accept(iter_eval_visitor)).to_s\n      acc[key_val] = value_expr.accept(iter_eval_visitor)\n    end\n    index = index + 1\n    acc\n  end\n  Any.new(mapped)\nelse\n  coll = coll_val.as_a\n  index = 0\n  mapped = coll.reduce(coll.class.new) do |acc, item|\n    iter_ctx = ExpressionContext.new(ctx)\n    iter_ctx.variables[node.value_name] = item\n    if key = node.key_name\n      iter_ctx.variables[key] = Any.new(index.to_i64)\n    end\n    iter_eval_visitor = Visitors::Evaluator.new(iter_ctx)\n    if cond = node.cond_expr\n      if (cond.accept(iter_eval_visitor)).as_bool?\n        acc << (value_expr.accept(iter_eval_visitor))\n      end\n    else\n      acc << (value_expr.accept(iter_eval_visitor))\n    end\n    index = index + 1\n    acc\n  end\n  Any.new(mapped)\nend\n"}},{"id":"visit(node:AST::Expression)-instance-method","html_id":"visit(node:AST::Expression)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Expression"}],"args_string":"(node : AST::Expression)","args_html":"(node : <a href=\"../../HCL/AST/Expression.html\">AST::Expression</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":59,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L59"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Expression"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.children.reduce(HCL::Any.new(nil)) do |result, child|\n  current = result ? result.raw : nil\n  next_val = nil\n  if child.is_a?(AST::GetAttrExpr)\n    if !current\n      raise(\"Cannot read attribute #{child.attribute_name} from null\")\n    else\n      if current.is_a?(Hash)\n        attr = current[child.attribute_name].raw\n        next_val = attr\n      else\n        if current.is_a?(Array)\n          next_val = current.map do |item|\n            item[child.attribute_name]\n          end\n        else\n          raise(\"Cannot read attribute #{child.attribute_name} from #{current.class}\")\n        end\n      end\n    end\n  else\n    if child.is_a?(AST::IndexExpr)\n      child_val = (child.index_exp.accept(self)).raw\n      if !current\n        raise(\"Cannot read member #{child_val} from null\")\n      else\n        if child_val.is_a?(String) && current.is_a?(Hash)\n          attr = current[child_val].raw\n          next_val = attr\n        else\n          if child_val.is_a?(Int64) && current.is_a?(Array)\n            attr = current[child_val].raw\n            next_val = attr\n          else\n            raise(\"Cannot read member #{child_val} from #{current.class}\")\n          end\n        end\n      end\n    else\n      if child.is_a?(AST::SplatExpr)\n        if !current\n          raise(\"Cannot perform splat on null\")\n        else\n          if current.is_a?(Array)\n            attr = current\n            next_val = attr\n          else\n            raise(\"Cannot perform splat on #{current.class}\")\n          end\n        end\n      else\n        next_val = (child.accept(self)).raw\n      end\n    end\n  end\n  HCL::Any.new(next_val)\nend"}},{"id":"visit(node:AST::CondExpr)-instance-method","html_id":"visit(node:AST::CondExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::CondExpr"}],"args_string":"(node : AST::CondExpr)","args_html":"(node : <a href=\"../../HCL/AST/CondExpr.html\">AST::CondExpr</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":46,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L46"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::CondExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"predicate_value = (node.predicate.accept(self)).raw\nif truthy?(predicate_value)\n  node.true_expr.accept(self)\nelse\n  node.false_expr.accept(self)\nend\n"}},{"id":"visit(node:AST::CallExpr)-instance-method","html_id":"visit(node:AST::CallExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::CallExpr"}],"args_string":"(node : AST::CallExpr)","args_html":"(node : <a href=\"../../HCL/AST/CallExpr.html\">AST::CallExpr</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":30,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L30"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::CallExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"call_args = node.args.map do |arg|\n  (arg.accept(self)).as(Any)\nend\nif node.varadic?\n  varadic_args = call_args.pop.raw\n  if !varadic_args.is_a?(Array(Any))\n    raise(\"Expected varadic argument to evaluate to a list\")\n  end\n  varadic_args.map(&.raw).each do |arg|\n    call_args << (Any.new(arg))\n  end\nend\nctx.call_func(node.id, call_args)\n"}},{"id":"visit(node:AST::Body)-instance-method","html_id":"visit(node:AST::Body)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Body"}],"args_string":"(node : AST::Body)","args_html":"(node : <a href=\"../../HCL/AST/Body.html\">AST::Body</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":26,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L26"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Body"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"visit_body(node)"}},{"id":"visit(node:AST::Block)-instance-method","html_id":"visit(node:AST::Block)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Block"}],"args_string":"(node : AST::Block)","args_html":"(node : <a href=\"../../HCL/AST/Block.html\">AST::Block</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":9,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L9"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"labels = node.labels\nblock_header = (Array(Any).new(labels.size + 1)).tap do |arr|\n  arr << (Any.new(node.id))\n  labels.each do |label|\n    arr << (label.accept(self))\n  end\n  arr\nend\nblock_value = visit_body(node)\nblock_header.reverse.reduce(block_value) do |acc, val|\n  Any.new({val.to_s => acc})\nend\n"}},{"id":"visit(node:AST::Node)-instance-method","html_id":"visit(node:AST::Node)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(node : AST::Node)","args_html":"(node : <a href=\"../../HCL/AST/Node.html\">AST::Node</a>)","location":{"filename":"src/hcl/visitors/evaluator.cr","line_number":357,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/evaluator.cr#L357"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"Unreachable\")"}}],"macros":[],"types":[]},{"html_id":"hcl/HCL/Visitors/ToSVisitor","path":"HCL/Visitors/ToSVisitor.html","kind":"class","full_name":"HCL::Visitors::ToSVisitor","name":"ToSVisitor","abstract":false,"superclass":{"html_id":"hcl/HCL/Visitor","kind":"class","full_name":"HCL::Visitor","name":"Visitor"},"ancestors":[{"html_id":"hcl/HCL/Visitor","kind":"class","full_name":"HCL::Visitor","name":"Visitor"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":3,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L3"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"hcl/HCL/Visitors","kind":"module","full_name":"HCL::Visitors","name":"Visitors"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(io:IO)-class-method","html_id":"new(io:IO)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","args_html":"(io : IO)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":6,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L6"},"def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"visit(node:AST::Block)-instance-method","html_id":"visit(node:AST::Block)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Block"}],"args_string":"(node : AST::Block)","args_html":"(node : <a href=\"../../HCL/AST/Block.html\">AST::Block</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":9,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L9"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Block"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << node.id\nio << \" \"\nif node.labels.any?\n  node.labels.each do |label|\n    label.accept(self)\n    io << \" \"\n  end\nend\nio << \"{\"\nif node.attributes.any? || node.blocks.any?\n  io << \"\\n\"\nend\nindent = \"  \"\nnode.attributes.each do |key, value|\n  io << indent\n  io << \"#{key} = \"\n  attr_lines = value.to_s.split(\"\\n\")\n  attr_lines.each do |line|\n    if line != \"\"\n      if line != attr_lines.first\n        io << indent\n      end\n      io << line\n      io << \"\\n\"\n    end\n  end\nend\nif node.blocks.any?\n  if node.attributes.any?\n    io << \"\\n\"\n  end\n  node.blocks.each do |block|\n    block_lines = block.to_s.split(\"\\n\")\n    block_lines.each do |line|\n      if line != \"\"\n        io << indent\n        io << line\n        io << \"\\n\"\n      end\n    end\n  end\nend\nio << \"}\\n\"\n"}},{"id":"visit(node:AST::TemplateInterpolation)-instance-method","html_id":"visit(node:AST::TemplateInterpolation)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateInterpolation"}],"args_string":"(node : AST::TemplateInterpolation)","args_html":"(node : <a href=\"../../HCL/AST/TemplateInterpolation.html\">AST::TemplateInterpolation</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":288,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L288"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateInterpolation"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"${\"\nnode.expression.accept(self)\nio << \"}\"\n"}},{"id":"visit(node:AST::TemplateIf)-instance-method","html_id":"visit(node:AST::TemplateIf)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateIf"}],"args_string":"(node : AST::TemplateIf)","args_html":"(node : <a href=\"../../HCL/AST/TemplateIf.html\">AST::TemplateIf</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":274,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L274"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateIf"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"%{if \"\nnode.predicate.accept(self)\nio << \"}\"\nnode.true_tpl.accept(self)\nif false_tpl = node.false_tpl\n  io << \"%{else}\"\n  false_tpl.accept(self)\nend\nio << \"%{endif}\"\n"}},{"id":"visit(node:AST::TemplateForExpr)-instance-method","html_id":"visit(node:AST::TemplateForExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateForExpr"}],"args_string":"(node : AST::TemplateForExpr)","args_html":"(node : <a href=\"../../HCL/AST/TemplateForExpr.html\">AST::TemplateForExpr</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":258,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L258"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::TemplateForExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"%{for \"\nif key = node.key_name\n  io << key\n  io << \", \"\nend\nio << node.value_name\nio << \" in \"\nnode.coll_expr.accept(self)\nio << \"}\"\nnode.tpl_expr.accept(self)\nio << \"%{endfor}\"\n"}},{"id":"visit(node:AST::Template)-instance-method","html_id":"visit(node:AST::Template)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Template"}],"args_string":"(node : AST::Template)","args_html":"(node : <a href=\"../../HCL/AST/Template.html\">AST::Template</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":245,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L245"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Template"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.children.each do |exp|\n  case exp\n  when AST::Literal\n    self.in_quotes = true\n    exp.accept(self)\n    self.in_quotes = false\n  else\n    exp.accept(self)\n  end\nend"}},{"id":"visit(node:AST::SplatExpr)-instance-method","html_id":"visit(node:AST::SplatExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::SplatExpr"}],"args_string":"(node : AST::SplatExpr)","args_html":"(node : <a href=\"../../HCL/AST/SplatExpr.html\">AST::SplatExpr</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":241,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L241"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::SplatExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"[*]\""}},{"id":"visit(node:AST::OpExpr)-instance-method","html_id":"visit(node:AST::OpExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::OpExpr"}],"args_string":"(node : AST::OpExpr)","args_html":"(node : <a href=\"../../HCL/AST/OpExpr.html\">AST::OpExpr</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":225,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L225"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::OpExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"right_operand = node.right_operand\nleft_operand = node.left_operand\nif right_operand\n  left_operand.accept(self)\n  io << \" \"\n  io << node.operator\n  io << \" \"\n  right_operand.accept(self)\nelse\n  io << node.operator\n  left_operand.accept(self)\nend\n"}},{"id":"visit(node:AST::Number)-instance-method","html_id":"visit(node:AST::Number)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Number"}],"args_string":"(node : AST::Number)","args_html":"(node : <a href=\"../../HCL/AST/Number.html\">AST::Number</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":221,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L221"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << node.value"}},{"id":"visit(node:AST::Map)-instance-method","html_id":"visit(node:AST::Map)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Map"}],"args_string":"(node : AST::Map)","args_html":"(node : <a href=\"../../HCL/AST/Map.html\">AST::Map</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":208,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L208"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Map"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"{\\n\"\npairs = [] of String\nnode.attributes.each do |key, value|\n  pairs << \"  #{key} = #{value.to_s}\"\nend\nio << (pairs.join(\",\\n\"))\nio << \"\\n}\"\n"}},{"id":"visit(node:AST::Literal)-instance-method","html_id":"visit(node:AST::Literal)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Literal"}],"args_string":"(node : AST::Literal)","args_html":"(node : <a href=\"../../HCL/AST/Literal.html\">AST::Literal</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":198,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L198"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Literal"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if node.string? && (!in_quotes?)\n  io << \"\\\"\"\n  io << node.source\n  io << \"\\\"\"\nelse\n  io << node.source\nend"}},{"id":"visit(node:AST::List)-instance-method","html_id":"visit(node:AST::List)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::List"}],"args_string":"(node : AST::List)","args_html":"(node : <a href=\"../../HCL/AST/List.html\">AST::List</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":185,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L185"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::List"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"[\"\nnode.children.each_with_index do |child, index|\n  child.accept(self)\n  if index != (node.children.size - 1)\n    io << \", \"\n  end\nend\nio << \"]\"\n"}},{"id":"visit(node:AST::IndexExpr)-instance-method","html_id":"visit(node:AST::IndexExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::IndexExpr"}],"args_string":"(node : AST::IndexExpr)","args_html":"(node : <a href=\"../../HCL/AST/IndexExpr.html\">AST::IndexExpr</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":179,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L179"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::IndexExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"[\"\nnode.index_exp.accept(self)\nio << \"]\"\n"}},{"id":"visit(node:AST::Identifier)-instance-method","html_id":"visit(node:AST::Identifier)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Identifier"}],"args_string":"(node : AST::Identifier)","args_html":"(node : <a href=\"../../HCL/AST/Identifier.html\">AST::Identifier</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":175,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L175"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Identifier"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << node.name"}},{"id":"visit(node:AST::Heredoc)-instance-method","html_id":"visit(node:AST::Heredoc)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Heredoc"}],"args_string":"(node : AST::Heredoc)","args_html":"(node : <a href=\"../../HCL/AST/Heredoc.html\">AST::Heredoc</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":146,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L146"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Heredoc"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \"<<-\"\nio << node.delimiter\nio << \"\\n\"\nindent_size = node.indent_size\ncontent = node.content\ndelimiter = node.delimiter\nif indent_size > 0\n  lines = content.to_s.split(\"\\n\")\n  indent = \" \" * (Math.max(2, indent_size - 2))\n  lines.each do |line|\n    if line != \"\"\n      io << indent\n      io << line\n      io << \"\\n\"\n    end\n  end\n  delim_indent = \" \" * (Math.max(0, indent_size - 4))\n  io << delim_indent\n  io << delimiter\nelse\n  io << content\n  io << delimiter\nend\n"}},{"id":"visit(node:AST::GetAttrExpr)-instance-method","html_id":"visit(node:AST::GetAttrExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::GetAttrExpr"}],"args_string":"(node : AST::GetAttrExpr)","args_html":"(node : <a href=\"../../HCL/AST/GetAttrExpr.html\">AST::GetAttrExpr</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":141,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L141"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::GetAttrExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << \".\"\nio << node.attribute_name\n"}},{"id":"visit(node:AST::ForExpr)-instance-method","html_id":"visit(node:AST::ForExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::ForExpr"}],"args_string":"(node : AST::ForExpr)","args_html":"(node : <a href=\"../../HCL/AST/ForExpr.html\">AST::ForExpr</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":113,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L113"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::ForExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << node.start_tag\nio << \"for \"\nif key = node.key_name\n  io << key\n  io << \", \"\nend\nio << node.value_name\nio << \" in \"\nnode.coll_expr.accept(self)\nio << \": \"\nif key = node.key_expr\n  key.accept(self)\n  io << \" => \"\nend\nnode.value_expr.accept(self)\nif cond = node.cond_expr\n  io << \" if \"\n  cond.accept(self)\nend\nio << node.end_tag\n"}},{"id":"visit(node:AST::Expression)-instance-method","html_id":"visit(node:AST::Expression)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Expression"}],"args_string":"(node : AST::Expression)","args_html":"(node : <a href=\"../../HCL/AST/Expression.html\">AST::Expression</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":96,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L96"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Expression"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.children.each do |exp|\n  case exp\n  when AST::Expression\n    io << \"(\"\n    exp.accept(self)\n    io << \")\"\n  when AST::Template\n    if exp.quoted?\n      io << \"\\\"\"\n    end\n    exp.accept(self)\n    if exp.quoted?\n      io << \"\\\"\"\n    end\n  else\n    exp.accept(self)\n  end\nend"}},{"id":"visit(node:AST::CondExpr)-instance-method","html_id":"visit(node:AST::CondExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::CondExpr"}],"args_string":"(node : AST::CondExpr)","args_html":"(node : <a href=\"../../HCL/AST/CondExpr.html\">AST::CondExpr</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":88,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L88"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::CondExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.predicate.accept(self)\nio << \" ? \"\nnode.true_expr.accept(self)\nio << \" : \"\nnode.false_expr.accept(self)\n"}},{"id":"visit(node:AST::CallExpr)-instance-method","html_id":"visit(node:AST::CallExpr)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::CallExpr"}],"args_string":"(node : AST::CallExpr)","args_html":"(node : <a href=\"../../HCL/AST/CallExpr.html\">AST::CallExpr</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":73,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L73"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::CallExpr"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << node.id\nio << \"(\"\nnode.args.each_with_index do |arg, index|\n  arg.accept(self)\n  if (node.varadic? && (index == (node.args.size - 1))) && arg.is_a?(AST::Identifier)\n    io << \"...\"\n  end\nend\nio << \")\"\n"}},{"id":"visit(node:AST::Body)-instance-method","html_id":"visit(node:AST::Body)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Body"}],"args_string":"(node : AST::Body)","args_html":"(node : <a href=\"../../HCL/AST/Body.html\">AST::Body</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":57,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L57"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Body"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"node.attributes.each do |key, value|\n  io << key\n  io << \" = \"\n  value.accept(self)\n  io << \"\\n\"\nend\nif node.attributes.any?\n  io << \"\\n\"\nend\nnode.blocks.each do |block|\n  block.accept(self)\n  if node.blocks.last == block\n  else\n    io << \"\\n\"\n  end\nend\n"}},{"id":"visit(node:AST::Node)-instance-method","html_id":"visit(node:AST::Node)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"args_string":"(node : AST::Node)","args_html":"(node : <a href=\"../../HCL/AST/Node.html\">AST::Node</a>)","location":{"filename":"src/hcl/visitors/to_s_visitor.cr","line_number":294,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/visitors/to_s_visitor.cr#L294"},"def":{"name":"visit","args":[{"name":"node","doc":null,"default_value":"","external_name":"node","restriction":"AST::Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(\"Unreachable\")"}}],"macros":[],"types":[]}]}]},{"html_id":"hcl/NamedTuple","path":"NamedTuple.html","kind":"struct","full_name":"NamedTuple(**T)","name":"NamedTuple","abstract":false,"superclass":{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/to_hcl.cr","line_number":27,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L27"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A named tuple is a fixed-size, immutable, stack-allocated mapping\nof a fixed set of keys to values.\n\nYou can think of a `NamedTuple` as an immutable `Hash` whose keys (which\nare of type `Symbol`), and the types for each key, are known at compile time.\n\nA named tuple can be created with a named tuple literal:\n\n```\nlanguage = {name: \"Crystal\", year: 2011} # NamedTuple(name: String, year: Int32)\n\nlanguage[:name]  # => \"Crystal\"\nlanguage[:year]  # => 2011\nlanguage[:other] # compile time error\n```\n\nThe compiler knows what types are in each key, so when indexing a named tuple\nwith a symbol literal the compiler will return the value for that key and\nwith the expected type, like in the above snippet. Indexing with a symbol\nliteral for which there's no key will give a compile-time error.\n\nIndexing with a symbol that is only known at runtime will return\na value whose type is the union of all the types in the named tuple,\nand might raise `KeyError`.","summary":"<p>A named tuple is a fixed-size, immutable, stack-allocated mapping of a fixed set of keys to values.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/to_hcl.cr","line_number":28,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L28"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builder.map do |m|\n  {% for key in T.keys %}\n        m.attribute({{ key.symbolize }}) { self[{{ key.symbolize }}].to_hcl(m) }\n      {% end %}\nend"}}],"macros":[],"types":[]},{"html_id":"hcl/Nil","path":"Nil.html","kind":"struct","full_name":"Nil","name":"Nil","abstract":false,"superclass":{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/to_hcl.cr","line_number":37,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L37"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The `Nil` type has only one possible value: `nil`.\n\n`nil` is commonly used to represent the absence of a value.\nFor example, `String#index` returns the position of the character or `nil` if it's not\nin the string:\n\n```\nstr = \"Hello world\"\nstr.index 'e' # => 1\nstr.index 'a' # => nil\n```\n\nIn the above example, trying to invoke a method on the returned value will\ngive a compile time error unless both `Int32` and `Nil` define that method:\n\n```\nstr = \"Hello world\"\nidx = str.index 'e'\nidx + 1 # Error: undefined method '+' for Nil\n```\n\nThe language and the standard library provide short, readable, easy ways to deal with `nil`,\nsuch as `Object#try` and `Object#not_nil!`:\n\n```\nstr = \"Hello world\"\n\n# The index of 'e' in str or 0 if not found\nidx1 = str.index('e') || 0\n\nidx2 = str.index('a')\nif idx2\n  # Compiles: idx2 can't be nil here\n  idx2 + 1\nend\n\n# Tell the compiler that we are sure the returned\n# value is not nil: raises a runtime exception\n# if our assumption doesn't hold.\nidx3 = str.index('o').not_nil!\n```","summary":"<p>The <code><a href=\"Nil.html\">Nil</a></code> type has only one possible value: <code>nil</code>.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/to_hcl.cr","line_number":38,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L38"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builder.literal(\"null\")"}}],"macros":[],"types":[]},{"html_id":"hcl/Number","path":"Number.html","kind":"struct","full_name":"Number","name":"Number","abstract":true,"superclass":{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"hcl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/to_hcl.cr","line_number":43,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L43"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"hcl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The top-level number type.","summary":"<p>The top-level number type.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/to_hcl.cr","line_number":44,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L44"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builder.number(self)"}}],"macros":[],"types":[]},{"html_id":"hcl/Object","path":"Object.html","kind":"class","full_name":"Object","name":"Object","abstract":true,"superclass":null,"ancestors":[],"locations":[{"filename":"src/hcl/any.cr","line_number":298,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L298"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"}],"including_types":[],"namespace":null,"doc":"`Object` is the base type of all Crystal objects.","summary":"<p><code><a href=\"Object.html\">Object</a></code> is the base type of all Crystal objects.</p>","class_methods":[{"id":"from_hcl(string_or_io:String|IO,ctx:HCL::ExpressionContext=HCL::ExpressionContext.default_context)-class-method","html_id":"from_hcl(string_or_io:String|IO,ctx:HCL::ExpressionContext=HCL::ExpressionContext.default_context)-class-method","name":"from_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"string_or_io","doc":null,"default_value":"","external_name":"string_or_io","restriction":"String | IO"},{"name":"ctx","doc":null,"default_value":"HCL::ExpressionContext.default_context","external_name":"ctx","restriction":"HCL::ExpressionContext"}],"args_string":"(string_or_io : String | IO, ctx : HCL::ExpressionContext = <span class=\"t\">HCL</span><span class=\"t\">::</span><span class=\"t\">ExpressionContext</span>.default_context)","args_html":"(string_or_io : <a href=\"String.html\">String</a> | IO, ctx : <a href=\"HCL/ExpressionContext.html\">HCL::ExpressionContext</a> = <span class=\"t\">HCL</span><span class=\"t\">::</span><span class=\"t\">ExpressionContext</span>.default_context)","location":{"filename":"src/hcl/from_hcl.cr","line_number":1,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/from_hcl.cr#L1"},"def":{"name":"from_hcl","args":[{"name":"string_or_io","doc":null,"default_value":"","external_name":"string_or_io","restriction":"String | IO"},{"name":"ctx","doc":null,"default_value":"HCL::ExpressionContext.default_context","external_name":"ctx","restriction":"HCL::ExpressionContext"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"document = HCL::Parser.parse!(string_or_io)\nnew(document, ctx)\n"}}],"constructors":[],"instance_methods":[{"id":"===(other:HCL::Any)-instance-method","html_id":"===(other:HCL::Any)-instance-method","name":"===","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"HCL::Any"}],"args_string":"(other : HCL::Any)","args_html":"(other : <a href=\"HCL/Any.html\">HCL::Any</a>)","location":{"filename":"src/hcl/any.cr","line_number":299,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L299"},"def":{"name":"===","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"HCL::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self === other.raw"}}],"macros":[],"types":[]},{"html_id":"hcl/Reference","path":"Reference.html","kind":"class","full_name":"Reference","name":"Reference","abstract":false,"superclass":{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"},"ancestors":[{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/any.cr","line_number":310,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L310"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/Array","kind":"class","full_name":"Array(T)","name":"Array"},{"html_id":"hcl/Hash","kind":"class","full_name":"Hash(K, V)","name":"Hash"},{"html_id":"hcl/HCL/AST/Node","kind":"class","full_name":"HCL::AST::Node","name":"Node"},{"html_id":"hcl/HCL/Builder","kind":"class","full_name":"HCL::Builder","name":"Builder"},{"html_id":"hcl/HCL/ExpressionContext","kind":"class","full_name":"HCL::ExpressionContext","name":"ExpressionContext"},{"html_id":"hcl/HCL/Function","kind":"class","full_name":"HCL::Function","name":"Function"},{"html_id":"hcl/HCL/Parser","kind":"class","full_name":"HCL::Parser","name":"Parser"},{"html_id":"hcl/HCL/Visitor","kind":"class","full_name":"HCL::Visitor","name":"Visitor"},{"html_id":"hcl/String","kind":"class","full_name":"String","name":"String"}],"including_types":[],"namespace":null,"doc":"`Reference` is the base class of classes you define in your program.\nIt is set as a class' superclass when you don't specify one:\n\n```\nclass MyClass # < Reference\nend\n```\n\nA reference type is passed by reference: when you pass it to methods,\nreturn it from methods or assign it to variables, a pointer is actually passed.\n\nInvoking `new` on a `Reference` allocates a new instance on the heap.\nThe instance's memory is automatically freed (garbage-collected) when\nthe instance is no longer referred by any other entity in the program.","summary":"<p><code><a href=\"Reference.html\">Reference</a></code> is the base class of classes you define in your program.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"==(other:HCL::Any)-instance-method","html_id":"==(other:HCL::Any)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"HCL::Any"}],"args_string":"(other : HCL::Any)","args_html":"(other : <a href=\"HCL/Any.html\">HCL::Any</a>)","location":{"filename":"src/hcl/any.cr","line_number":311,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L311"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"HCL::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == other.raw"}}],"macros":[],"types":[]},{"html_id":"hcl/Set","path":"Set.html","kind":"struct","full_name":"Set(T)","name":"Set","abstract":false,"superclass":{"html_id":"hcl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"hcl/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"hcl/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"hcl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/to_hcl.cr","line_number":49,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L49"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"hcl/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"hcl/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"`Set` implements a collection of unordered values with no duplicates.\n\nAn `Enumerable` object can be converted to `Set` using the `#to_set` method.\n\n`Set` uses `Hash` as storage, so you must note the following points:\n\n* Equality of elements is determined according to `Object#==` and `Object#hash`.\n* `Set` assumes that the identity of each element does not change while it is stored. Modifying an element of a set will render the set to an unreliable state.\n\n### Example\n\n```\ns1 = Set{1, 2}\ns2 = [1, 2].to_set\ns3 = Set.new [1, 2]\ns1 == s2 # => true\ns1 == s3 # => true\ns1.add(2)\ns1.concat([6, 8])\ns1.subset_of? s2 # => false\ns2.subset_of? s1 # => true\n```","summary":"<p><code><a href=\"Set.html\">Set</a></code> implements a collection of unordered values with no duplicates.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/to_hcl.cr","line_number":50,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L50"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builder.list do |l|\n  each do |val|\n    l << (val.to_hcl(builder))\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"hcl/String","path":"String.html","kind":"class","full_name":"String","name":"String","abstract":false,"superclass":{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"hcl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"hcl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/to_hcl.cr","line_number":59,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L59"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"hcl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A `String` represents an immutable sequence of UTF-8 characters.\n\nA `String` is typically created with a string literal, enclosing UTF-8 characters\nin double quotes:\n\n```\n\"hello world\"\n```\n\nA backslash can be used to denote some characters inside the string:\n\n```\n\"\\\"\" # double quote\n\"\\\\\" # backslash\n\"\\e\" # escape\n\"\\f\" # form feed\n\"\\n\" # newline\n\"\\r\" # carriage return\n\"\\t\" # tab\n\"\\v\" # vertical tab\n```\n\nYou can use a backslash followed by an *u* and four hexadecimal characters to denote a unicode codepoint written:\n\n```\n\"\\u0041\" # == \"A\"\n```\n\nOr you can use curly braces and specify up to six hexadecimal numbers (0 to 10FFFF):\n\n```\n\"\\u{41}\" # == \"A\"\n```\n\nA string can span multiple lines:\n\n```\n\"hello\n      world\" # same as \"hello\\n      world\"\n```\n\nNote that in the above example trailing and leading spaces, as well as newlines,\nend up in the resulting string. To avoid this, you can split a string into multiple lines\nby joining multiple literals with a backslash:\n\n```\n\"hello \" \\\n\"world, \" \\\n\"no newlines\" # same as \"hello world, no newlines\"\n```\n\nAlternatively, a backslash followed by a newline can be inserted inside the string literal:\n\n```\n\"hello \\\n     world, \\\n     no newlines\" # same as \"hello world, no newlines\"\n```\n\nIn this case, leading whitespace is not included in the resulting string.\n\nIf you need to write a string that has many double quotes, parentheses, or similar\ncharacters, you can use alternative literals:\n\n```\n# Supports double quotes and nested parentheses\n%(hello (\"world\")) # same as \"hello (\\\"world\\\")\"\n\n# Supports double quotes and nested brackets\n%[hello [\"world\"]] # same as \"hello [\\\"world\\\"]\"\n\n# Supports double quotes and nested curlies\n%{hello {\"world\"}} # same as \"hello {\\\"world\\\"}\"\n\n# Supports double quotes and nested angles\n%<hello <\"world\">> # same as \"hello <\\\"world\\\">\"\n```\n\nTo create a `String` with embedded expressions, you can use string interpolation:\n\n```\na = 1\nb = 2\n\"sum = #{a + b}\" # \"sum = 3\"\n```\n\nThis ends up invoking `Object#to_s(IO)` on each expression enclosed by `#{...}`.\n\nIf you need to dynamically build a string, use `String#build` or `IO::Memory`.\n\n### Non UTF-8 valid strings\n\nString might end up being conformed of bytes which are an invalid\nbyte sequence according to UTF-8. This can happen if the string is created\nvia one of the constructors that accept bytes, or when getting a string\nfrom `String.build` or `IO::Memory`. No exception will be raised, but\ninvalid byte sequences, when asked as chars, will use the unicode replacement\nchar (value 0xFFFD). For example:\n\n```\n# here 255 is not a valid byte value in the UTF-8 encoding\nstring = String.new(Bytes[255, 97])\nstring.valid_encoding? # => false\n\n# The first char here is the unicode replacement char\nstring.chars # => ['�', 'a']\n```\n\nOne can also create strings with specific byte value in them by\nusing octal and hexadecimal escape sequences:\n\n```\n# Octal escape sequences\n\"\\101\" # # => \"A\"\n\"\\12\"  # # => \"\\n\"\n\"\\1\"   # string with one character with code point 1\n\"\\377\" # string with one byte with value 255\n\n# Hexadecimal escape sequences\n\"\\x41\" # # => \"A\"\n\"\\xFF\" # string with one byte with value 255\n```\n\nThe reason for allowing strings that don't have a valid UTF-8 sequence\nis that the world is full of content that isn't properly encoded,\nand having a program raise an exception or stop because of this\nis not good. It's better if programs are more resilient, but\nshow a replacement character when there's an error in incoming data.","summary":"<p>A <code><a href=\"String.html\">String</a></code> represents an immutable sequence of UTF-8 characters.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/to_hcl.cr","line_number":60,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L60"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builder.literal(self)"}}],"macros":[],"types":[]},{"html_id":"hcl/Symbol","path":"Symbol.html","kind":"struct","full_name":"Symbol","name":"Symbol","abstract":false,"superclass":{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"hcl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/to_hcl.cr","line_number":65,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L65"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"hcl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A symbol is a constant that is identified by a name without you having to give\nit a numeric value.\n\n```\n:hello\n:welcome\n:\"123\"\n:\"symbol with spaces\"\n```\n\nInternally a symbol is represented as an `Int32`, so it's very efficient.\n\nYou can't dynamically create symbols. When you compile your program, each symbol\ngets assigned a unique number.","summary":"<p>A symbol is a constant that is identified by a name without you having to give it a numeric value.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/to_hcl.cr","line_number":66,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L66"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builder.identifier(self)"}}],"macros":[],"types":[]},{"html_id":"hcl/Tuple","path":"Tuple.html","kind":"struct","full_name":"Tuple(*T)","name":"Tuple","abstract":false,"superclass":{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},"ancestors":[{"html_id":"hcl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"hcl/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"hcl/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"hcl/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"hcl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/to_hcl.cr","line_number":71,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L71"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[{"html_id":"hcl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"hcl/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A tuple is a fixed-size, immutable, stack-allocated sequence of values\nof possibly different types.\n\nYou can think of a `Tuple` as an immutable `Array` whose types for each position\nare known at compile time.\n\nA tuple can be created with the usual `new` method or with a tuple literal:\n\n```\ntuple = {1, \"hello\", 'x'} # Tuple(Int32, String, Char)\ntuple[0]                  # => 1\ntuple[1]                  # => \"hello\"\ntuple[2]                  # => 'x'\n```\n\nThe compiler knows what types are in each position, so when indexing\na tuple with an integer literal the compiler will return\nthe value in that index and with the expected type, like in the above\nsnippet. Indexing with an integer literal outside the bounds of the tuple\nwill give a compile-time error.\n\nIndexing with an integer value that is only known at runtime will return\na value whose type is the union of all the types in the tuple, and might raise\n`IndexError`.\n\nIndexing with a range literal known at compile-time is also allowed, and the\nreturned value will have the correct sub-tuple type:\n\n```\ntuple = {1, \"hello\", 'x'} # Tuple(Int32, String, Char)\nsub = tuple[0..1]         # => {1, \"hello\"}\ntypeof(sub)               # => Tuple(Int32, String)\n```\n\nTuples are the preferred way to return fixed-size multiple return\nvalues because no memory is needed to be allocated for them:\n\n```\ndef one_and_hello\n  {1, \"hello\"}\nend\n\none, hello = one_and_hello\none   # => 1\nhello # => \"hello\"\n```\n\nGood examples of the above are `Number#divmod` and `Enumerable#minmax`.\n\nTuples can be splat with the `*` operator and passed to methods:\n\n```\ndef multiply(string, value)\n  string * value\nend\n\ntuple = {\"hey\", 2}\nvalue = multiply(*tuple) # same as multiply tuple[0], tuple[1]\nvalue                    # => \"heyhey\"\n```\n\nFinally, when using a splat argument in a method definition its type\nwill be a tuple of the call arguments:\n\n```\ndef splat_test(*args)\n  args\nend\n\ntuple = splat_test 1, \"hello\", 'x'\ntuple.class # => Tuple(Int32, String, Char)\ntuple       # => {1, \"hello\", 'x'}\n```","summary":"<p>A tuple is a fixed-size, immutable, stack-allocated sequence of values of possibly different types.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_hcl(builder:HCL::Builder)-instance-method","html_id":"to_hcl(builder:HCL::Builder)-instance-method","name":"to_hcl","doc":null,"summary":null,"abstract":false,"args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"args_string":"(builder : HCL::Builder)","args_html":"(builder : <a href=\"HCL/Builder.html\">HCL::Builder</a>)","location":{"filename":"src/hcl/to_hcl.cr","line_number":72,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/to_hcl.cr#L72"},"def":{"name":"to_hcl","args":[{"name":"builder","doc":null,"default_value":"","external_name":"builder","restriction":"HCL::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"builder.list do |l|\n  each do |val|\n    l << (val.to_hcl(builder))\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"hcl/Value","path":"Value.html","kind":"struct","full_name":"Value","name":"Value","abstract":true,"superclass":{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"},"ancestors":[{"html_id":"hcl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/hcl/any.cr","line_number":304,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L304"}],"repository_name":"hcl","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"hcl/Bool","kind":"struct","full_name":"Bool","name":"Bool"},{"html_id":"hcl/NamedTuple","kind":"struct","full_name":"NamedTuple(**T)","name":"NamedTuple"},{"html_id":"hcl/Nil","kind":"struct","full_name":"Nil","name":"Nil"},{"html_id":"hcl/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"hcl/Symbol","kind":"struct","full_name":"Symbol","name":"Symbol"},{"html_id":"hcl/Tuple","kind":"struct","full_name":"Tuple(*T)","name":"Tuple"}],"including_types":[],"namespace":null,"doc":"`Value` is the base type of the primitive types (`Nil`, `Bool`, `Char`, `Number`),\n`Symbol`, `Pointer`, `Tuple`, `StaticArray` and all structs.\n\nA `Value` is passed by value: when you pass it to methods,\nreturn it from methods or assign it to variables, a copy\nof the value is actually passed.\nThis is not important for nil, bools, integers, floats, symbols,\npointers and tuples, because they are immutable, but with a mutable\n`Struct` or with a `StaticArray` you have to be careful. Read their\ndocumentation to learn more about this.","summary":"<p><code><a href=\"Value.html\">Value</a></code> is the base type of the primitive types (<code><a href=\"Nil.html\">Nil</a></code>, <code><a href=\"Bool.html\">Bool</a></code>, <code>Char</code>, <code><a href=\"Number.html\">Number</a></code>), <code><a href=\"Symbol.html\">Symbol</a></code>, <code>Pointer</code>, <code><a href=\"Tuple.html\">Tuple</a></code>, <code>StaticArray</code> and all structs.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"==(other:HCL::Any)-instance-method","html_id":"==(other:HCL::Any)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"HCL::Any"}],"args_string":"(other : HCL::Any)","args_html":"(other : <a href=\"HCL/Any.html\">HCL::Any</a>)","location":{"filename":"src/hcl/any.cr","line_number":305,"url":"https://github.com/maxfierke/hcl.cr/blob/907a5bda30f41e6235f0d1fdd2e8b8a3ae82c1c4/src/hcl/any.cr#L305"},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"HCL::Any"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == other.raw"}}],"macros":[],"types":[]}]}}